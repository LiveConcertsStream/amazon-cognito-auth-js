{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///amazon-cognito-auth.min.js","webpack:///webpack/bootstrap d2717f06509ed670acdd","webpack:///./enhance.js","webpack:///./src/CognitoAccessToken.js","webpack:///./src/CognitoIdToken.js","webpack:///./src/CognitoRefreshToken.js","webpack:///./src/CognitoTokenScopes.js","webpack:///./src/CognitoAuthSession.js","webpack:///./src/DecodingHelper.js","webpack:///./src/StorageHelper.js","webpack:///./src/CognitoAuth.js","webpack:///./src/CookieStorage.js","webpack:///./src/DateHelper.js","webpack:///./src/UriHelper.js","webpack:///./src/index.js","webpack:///./~/js-cookie/src/js.cookie.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","defineProperty","value","_src","keys","forEach","enumerable","get","window","crypto","msCrypto","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","configurable","writable","protoProps","staticProps","_DecodingHelper","CognitoAccessToken","AccessToken","jwtToken","payload","decodePayload","accessToken","jwtPayload","split","JSON","parse","decode","exp","username","err","CognitoIdToken","IdToken","idToken","CognitoRefreshToken","RefreshToken","refreshToken","CognitoTokenScopes","TokenScopesArray","tokenScopes","_interopRequireDefault","_CognitoTokenScopes","_CognitoTokenScopes2","_CognitoAccessToken","_CognitoAccessToken2","_CognitoIdToken","_CognitoIdToken2","_CognitoRefreshToken","_CognitoRefreshToken2","CognitoAuthSession","_ref","arguments","undefined","TokenScopes","State","state","now","Math","floor","Date","getExpiration","e","global","str","atob","dataMemory","MemoryStorage","StorageHelper","storageWindow","localStorage","setItem","removeItem","exception","_typeof","Symbol","iterator","constructor","_CognitoAuthSession","_CognitoAuthSession2","_StorageHelper","_StorageHelper2","_UriHelper","CognitoAuth","data","ClientId","AppWebDomain","RedirectUriSignIn","RedirectUriSignOut","IdentityProvider","UserPoolId","AdvancedSecurityDataCollectionFlag","Storage","LaunchUri","Error","getCognitoConstants","PARAMETERERROR","clientId","appWebDomain","Array","isArray","SCOPETYPEERROR","responseType","TOKEN","storage","getStorage","getLastUser","userPoolId","signInUserSession","getCachedSession","setTokenScopes","launchUri","advancedSecurityDataCollectionFlag","CognitoConstants","DOMAIN_SCHEME","DOMAIN_PATH_SIGNIN","DOMAIN_PATH_TOKEN","DOMAIN_PATH_SIGNOUT","DOMAIN_QUERY_PARAM_REDIRECT_URI","DOMAIN_QUERY_PARAM_SIGNOUT_URI","DOMAIN_QUERY_PARAM_RESPONSE_TYPE","DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER","DOMAIN_QUERY_PARAM_USERCONTEXTDATA","CLIENT_ID","STATE","SCOPE","CODE","POST","QUESTIONMARK","POUNDSIGN","COLONDOUBLESLASH","SLASH","AMPERSAND","EQUALSIGN","SPACE","CONTENTTYPE","CONTENTTYPEVALUE","AUTHORIZATIONCODE","IDTOKEN","ACCESSTOKEN","REFRESHTOKEN","ERROR","ERROR_DESCRIPTION","STRINGTYPE","STATELENGTH","STATEORIGINSTRING","WITHCREDENTIALS","UNDEFINED","HOSTNAMEREGEX","QUERYPARAMETERREGEX1","QUERYPARAMETERREGEX2","HEADER","Content-Type","lastUserKey","lastAuthUser","getItem","Username","tokenScopesInputSet","Set","cachedScopesSet","getScopes","URL","getFQDNSignIn","isValid","userhandler","onSuccess","compareSets","getRefreshToken","getToken","refreshSession","setIdToken","setAccessToken","setRefreshToken","httpRequestResponse","isHashBasedUrl","map","indexOf","response","getQueryParameters","has","onFailure","getCodeQueryParameter","getTokenQueryParameter","setState","codeParameter","url","concat","getAppWebDomain","header","body","grant_type","client_id","getClientId","redirect_uri","code","boundOnSuccess","onSuccessExchangeForToken","bind","boundOnFailure","makePOSTRequest","setJwtToken","cacheTokensScopes","keyPrefix","idTokenKey","accessTokenKey","refreshTokenKey","scopeKey","scopesString","scopesArray","sessionData","cachedSession","lastUserName","tokenUserName","getAccessToken","getUsername","getTokenScopes","join","getIdToken","getJwtToken","set1","set2","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","item","return","match","splitMark","String","url2","str1","num","Map","set","buffer","chars","byteLength","index","push","Uint8Array","getRandomValues","random","_bufferToString","refresh_token","onSuccessRefreshToken","xhr","createCORSRequest","bodyString","setRequestHeader","substring","send","onreadystatechange","readyState","status","responseText","method","XMLHttpRequest","open","XDomainRequest","jsonData","jsonDataObject","id_token","access_token","tokenScopesString","encodeURIComponent","generateRandomString","identityProviderParam","getSpaceSeperatedScopeString","userContextDataParam","userContextData","getUserContextData","uri","getFQDNSignOut","clearCachedTokensScopes","AmazonCognitoAdvancedSecurityData","_username","_userpoolId","userpoolId","getData","_jsCookie","Cookies","CookieStorage","domain","path","expires","secure","remove","cookies","monthNames","weekNames","DateHelper","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","dateNow","SELF","_CognitoAuth","_DateHelper","_CookieStorage","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","registeredInModuleLoader","OldCookies","api","noConflict","extend","result","attributes","init","converter","document","defaults","setMilliseconds","getMilliseconds","toUTCString","stringify","test","write","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","cookie","rdecode","parts","slice","json","charAt","name","read","getJSON","apply","withConverter"],"mappings":"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","file":"amazon-cognito-auth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory();\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * Copyright 2017 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n * \n *      http://aws.amazon.com/apache2.0/\n * \n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License. \n */\n\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory();\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _src = __webpack_require__(12);\n\t\n\tObject.keys(_src).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _src[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar enhancements = _interopRequireWildcard(_src);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// The version of crypto-browserify included by aws-sdk only\n\t// checks for window.crypto, not window.msCrypto as used by\n\t// IE 11 – so we set it explicitly here\n\t/*!\r\n\t * Amazon Cognito Auth SDK for JavaScript\r\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\t\r\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n\t * You may not use this file except in compliance with the License.\r\n\t * A copy of the License is located at\r\n\t *\r\n\t *         http://aws.amazon.com/apache2.0/\r\n\t *\r\n\t * or in the \"license\" file accompanying this file.\r\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n\t * License for the specific language governing permissions\r\n\t * and limitations under the License.\r\n\t */\n\t\n\tif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n\t  window.crypto = window.msCrypto;\n\t}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\n\tmazon Cognito Auth SDK for JavaScript\r\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\tr\n\ticensed under the Apache License, Version 2.0 (the \"License\").\r\n\tou may not use this file except in compliance with the License.\r\n\tcopy of the License is located at\r\n\tr\n\thttp://aws.amazon.com/apache2.0/\r\n\tr\n\tor in the \"license\" file accompanying this file.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\teither express or implied. See the\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * License for the specific language governing permissions\r\n\tand limitations under the License.\r\n\tn\t\n\tvar _DecodingHelper = __webpack_require__(6);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAccessToken = function () {\n\t  /**\r\n\t   * Constructs a new CognitoAccessToken object\r\n\t   * @param {string=} AccessToken The JWT access token.\r\n\t   */\n\t  function CognitoAccessToken(AccessToken) {\n\t    _classCallCheck(this, CognitoAccessToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = AccessToken || '';\n\t    this.payload = this.decodePayload();\n\t  }\n\t\n\t  /**\r\n\t   * @returns {string} the record's token.\r\n\t   */\n\t\n\t\n\t  _createClass(CognitoAccessToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\r\n\t     * Sets new value for access token.\r\n\t     * @param {string=} accessToken The JWT access token.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setJwtToken',\n\t    value: function setJwtToken(accessToken) {\n\t      this.jwtToken = accessToken;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {int} the token's expiration (exp member).\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      if (this.jwtToken === null) {\n\t        return undefined;\n\t      }\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      return JSON.parse((0, _DecodingHelper.decode)(jwtPayload)).exp;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {string} the username from payload.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      if (this.jwtToken === null) {\n\t        return undefined;\n\t      }\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      return JSON.parse((0, _DecodingHelper.decode)(jwtPayload)).username;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {object} the token's payload.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'decodePayload',\n\t    value: function decodePayload() {\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      try {\n\t        return JSON.parse((0, _DecodingHelper.decode)(jwtPayload));\n\t      } catch (err) {\n\t        return {};\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoAccessToken;\n\t}();\n\t\n\texports.default = CognitoAccessToken;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\n\tmazon Cognito Auth SDK for JavaScript\r\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\ticensed under the Apache License, Version 2.0 (the \"License\").\r\n\tou may not use this file except in compliance with the License.\r\n\tcopy of the License is located at\r\n\tr\n\thttp://aws.amazon.com/apache2.0/\r\n\tr\n\tor in the \"license\" file accompanying this file.\r\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\teither express or implied. See the\r\n\ticense for the specific language governing permissions\r\n\tand limitations under the License.\r\n\tn\t\n\tvar _DecodingHelper = __webpack_require__(6);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoIdToken = function () {\n\t  /**\r\n\t   * Constructs a new CognitoIdToken object\r\n\t   * @param {string=} IdToken The JWT Id token\r\n\t   */\n\t  function CognitoIdToken(IdToken) {\n\t    _classCallCheck(this, CognitoIdToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = IdToken || '';\n\t    this.payload = this.decodePayload();\n\t  }\n\t\n\t  /**\r\n\t   * @returns {string} the record's token.\r\n\t   */\n\t\n\t\n\t  _createClass(CognitoIdToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\r\n\t     * Sets new value for id token.\r\n\t     * @param {string=} idToken The JWT Id token\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setJwtToken',\n\t    value: function setJwtToken(idToken) {\n\t      this.jwtToken = idToken;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {int} the token's expiration (exp member).\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      if (this.jwtToken === null) {\n\t        return undefined;\n\t      }\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      return JSON.parse((0, _DecodingHelper.decode)(jwtPayload)).exp;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {object} the token's payload.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'decodePayload',\n\t    value: function decodePayload() {\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      try {\n\t        return JSON.parse((0, _DecodingHelper.decode)(jwtPayload));\n\t      } catch (err) {\n\t        return {};\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoIdToken;\n\t}();\n\t\n\texports.default = CognitoIdToken;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\r\n\t * Amazon Cognito Auth SDK for JavaScript\r\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\t\r\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n\t * You may not use this file except in compliance with the License.\r\n\t * A copy of the License is located at\r\n\t *\r\n\t *         http://aws.amazon.com/apache2.0/\r\n\t *\r\n\t * or in the \"license\" file accompanying this file.\r\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n\t * License for the specific language governing permissions\r\n\t * and limitations under the License.\r\n\t */\n\t\n\t/** @class */\n\tvar CognitoRefreshToken = function () {\n\t  /**\r\n\t   * Constructs a new CognitoRefreshToken object\r\n\t   * @param {string=} RefreshToken The JWT refresh token.\r\n\t   */\n\t  function CognitoRefreshToken(RefreshToken) {\n\t    _classCallCheck(this, CognitoRefreshToken);\n\t\n\t    // Assign object\n\t    this.refreshToken = RefreshToken || '';\n\t  }\n\t\n\t  /**\r\n\t   * @returns {string} the record's token.\r\n\t   */\n\t\n\t\n\t  _createClass(CognitoRefreshToken, [{\n\t    key: 'getToken',\n\t    value: function getToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\r\n\t     * Sets new value for refresh token.\r\n\t     * @param {string=} refreshToken The JWT refresh token.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setToken',\n\t    value: function setToken(refreshToken) {\n\t      this.refreshToken = refreshToken;\n\t    }\n\t  }]);\n\t\n\t  return CognitoRefreshToken;\n\t}();\n\t\n\texports.default = CognitoRefreshToken;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\r\n\t * Amazon Cognito Auth SDK for JavaScript\r\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\t\r\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n\t * You may not use this file except in compliance with the License.\r\n\t * A copy of the License is located at\r\n\t *\r\n\t *         http://aws.amazon.com/apache2.0/\r\n\t *\r\n\t * or in the \"license\" file accompanying this file.\r\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n\t * License for the specific language governing permissions\r\n\t * and limitations under the License.\r\n\t */\n\t\n\t/** @class */\n\tvar CognitoTokenScopes = function () {\n\t  /**\r\n\t   * Constructs a new CognitoTokenScopes object\r\n\t   * @param {array=} TokenScopesArray The token scopes\r\n\t   */\n\t  function CognitoTokenScopes(TokenScopesArray) {\n\t    _classCallCheck(this, CognitoTokenScopes);\n\t\n\t    // Assign object\n\t    this.tokenScopes = TokenScopesArray || [];\n\t  }\n\t\n\t  /**\r\n\t   * @returns {Array} the token scopes.\r\n\t   */\n\t\n\t\n\t  _createClass(CognitoTokenScopes, [{\n\t    key: \"getScopes\",\n\t    value: function getScopes() {\n\t      return this.tokenScopes;\n\t    }\n\t\n\t    /**\r\n\t     * Sets new value for token scopes.\r\n\t     * @param {array=} tokenScopes The token scopes\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: \"setTokenScopes\",\n\t    value: function setTokenScopes(tokenScopes) {\n\t      this.tokenScopes = tokenScopes;\n\t    }\n\t  }]);\n\t\n\t  return CognitoTokenScopes;\n\t}();\n\t\n\texports.default = CognitoTokenScopes;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\n\tmazon Cognito Auth SDK for JavaScript\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\tr\n\ticensed under the Apache License, Version 2.0 (the \"License\").\r\n\tou may not use this file except in compliance with the License.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * A copy of the License is located at\r\n\tr\n\thttp://aws.amazon.com/apache2.0/\r\n\tr\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * or in the \"license\" file accompanying this file.\r\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\teither express or implied. See the\r\n\ticense for the specific language governing permissions\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * and limitations under the License.\r\n\tn\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tvar _CognitoTokenScopes2 = _interopRequireDefault(_CognitoTokenScopes);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAuthSession = function () {\n\t  /**\r\n\t   * Constructs a new CognitoUserSession object\r\n\t   * @param {CognitoIdToken} IdToken The session's Id token.\r\n\t   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\r\n\t   * @param {CognitoAccessToken} AccessToken The session's access token.\r\n\t   * @param {array}  TokenScopes  The session's token scopes.\r\n\t    * @param {string} State The session's state. \r\n\t   */\n\t  function CognitoAuthSession() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        IdToken = _ref.IdToken,\n\t        RefreshToken = _ref.RefreshToken,\n\t        AccessToken = _ref.AccessToken,\n\t        TokenScopes = _ref.TokenScopes,\n\t        State = _ref.State;\n\t\n\t    _classCallCheck(this, CognitoAuthSession);\n\t\n\t    if (IdToken) {\n\t      this.idToken = IdToken;\n\t    } else {\n\t      this.idToken = new _CognitoIdToken2.default();\n\t    }\n\t    if (RefreshToken) {\n\t      this.refreshToken = RefreshToken;\n\t    } else {\n\t      this.refreshToken = new _CognitoRefreshToken2.default();\n\t    }\n\t    if (AccessToken) {\n\t      this.accessToken = AccessToken;\n\t    } else {\n\t      this.accessToken = new _CognitoAccessToken2.default();\n\t    }\n\t    if (TokenScopes) {\n\t      this.tokenScopes = TokenScopes;\n\t    } else {\n\t      this.tokenScopes = new _CognitoTokenScopes2.default();\n\t    }\n\t    if (State) {\n\t      this.state = State;\n\t    } else {\n\t      this.state = null;\n\t    }\n\t  }\n\t\n\t  /**\r\n\t   * @returns {CognitoIdToken} the session's Id token\r\n\t   */\n\t\n\t\n\t  _createClass(CognitoAuthSession, [{\n\t    key: 'getIdToken',\n\t    value: function getIdToken() {\n\t      return this.idToken;\n\t    }\n\t\n\t    /**\r\n\t     * Set a new Id token\r\n\t     * @param {CognitoIdToken} IdToken The session's Id token.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setIdToken',\n\t    value: function setIdToken(IdToken) {\n\t      this.idToken = IdToken;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {CognitoRefreshToken} the session's refresh token\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getRefreshToken',\n\t    value: function getRefreshToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\r\n\t     * Set a new Refresh token\r\n\t     * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setRefreshToken',\n\t    value: function setRefreshToken(RefreshToken) {\n\t      this.refreshToken = RefreshToken;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {CognitoAccessToken} the session's access token\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getAccessToken',\n\t    value: function getAccessToken() {\n\t      return this.accessToken;\n\t    }\n\t\n\t    /**\r\n\t     * Set a new Access token\r\n\t     * @param {CognitoAccessToken} AccessToken The session's access token.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setAccessToken',\n\t    value: function setAccessToken(AccessToken) {\n\t      this.accessToken = AccessToken;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {CognitoTokenScopes} the session's token scopes\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getTokenScopes',\n\t    value: function getTokenScopes() {\n\t      return this.tokenScopes;\n\t    }\n\t\n\t    /**\r\n\t     * Set new token scopes\r\n\t     * @param {array}  tokenScopes  The session's token scopes.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setTokenScopes',\n\t    value: function setTokenScopes(tokenScopes) {\n\t      this.tokenScopes = tokenScopes;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {string} the session's state\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t\n\t    /**\r\n\t     * Set new state\r\n\t     * @param {string}  state  The session's state.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setState',\n\t    value: function setState(State) {\n\t      this.state = State;\n\t    }\n\t\n\t    /**\r\n\t     * Checks to see if the session is still valid based on session expiry information found\r\n\t     * in Access and Id Tokens and the current time\r\n\t     * @returns {boolean} if the session is still valid\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid() {\n\t      var now = Math.floor(new Date() / 1000);\n\t      try {\n\t        if (this.accessToken != null) {\n\t          return now < this.accessToken.getExpiration();\n\t        }\n\t        if (this.idToken != null) {\n\t          return now < this.idToken.getExpiration();\n\t        }\n\t        return false;\n\t      } catch (e) {\n\t        return false;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoAuthSession;\n\t}();\n\t\n\texports.default = CognitoAuthSession;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar decode = exports.decode = function decode(str) {\n\t  return global.atob(str);\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\r\n\t * Amazon Cognito Auth SDK for JavaScript\r\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\t\r\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n\t * You may not use this file except in compliance with the License.\r\n\t * A copy of the License is located at\r\n\t *\r\n\t *         http://aws.amazon.com/apache2.0/\r\n\t *\r\n\t * or in the \"license\" file accompanying this file.\r\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n\t * License for the specific language governing permissions\r\n\t * and limitations under the License.\r\n\t */\n\tvar dataMemory = {};\n\t\n\t/** @class */\n\t\n\tvar MemoryStorage = function () {\n\t  function MemoryStorage() {\n\t    _classCallCheck(this, MemoryStorage);\n\t  }\n\t\n\t  _createClass(MemoryStorage, null, [{\n\t    key: 'setItem',\n\t\n\t\n\t    /**\r\n\t     * This is used to set a specific item in storage\r\n\t     * @param {string} key - the key for the item\r\n\t     * @param {object} value - the value\r\n\t     * @returns {string} value that was set\r\n\t     */\n\t    value: function setItem(key, value) {\n\t      dataMemory[key] = value;\n\t      return dataMemory[key];\n\t    }\n\t\n\t    /**\r\n\t     * This is used to get a specific key from storage\r\n\t     * @param {string} key - the key for the item\r\n\t     * This is used to clear the storage\r\n\t     * @returns {string} the data item\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n\t    }\n\t\n\t    /**\r\n\t     * This is used to remove an item from storage\r\n\t     * @param {string} key - the key being set\r\n\t     * @returns {string} value - value that was deleted\r\n\t     */\n\t\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      return delete dataMemory[key];\n\t    }\n\t\n\t    /**\r\n\t     * This is used to clear the storage\r\n\t     * @returns {string} nothing\r\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      dataMemory = {};\n\t      return dataMemory;\n\t    }\n\t  }]);\n\t\n\t  return MemoryStorage;\n\t}();\n\t\n\t/** @class */\n\t\n\t\n\tvar StorageHelper = function () {\n\t\n\t  /**\r\n\t   * This is used to get a storage object\r\n\t   * @returns {object} the storage\r\n\t   */\n\t  function StorageHelper() {\n\t    _classCallCheck(this, StorageHelper);\n\t\n\t    try {\n\t      this.storageWindow = window.localStorage;\n\t      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n\t      this.storageWindow.removeItem('aws.cognito.test-ls');\n\t    } catch (exception) {\n\t      this.storageWindow = MemoryStorage;\n\t    }\n\t  }\n\t\n\t  /**\r\n\t   * This is used to return the storage\r\n\t   * @returns {object} the storage\r\n\t   */\n\t\n\t\n\t  _createClass(StorageHelper, [{\n\t    key: 'getStorage',\n\t    value: function getStorage() {\n\t      return this.storageWindow;\n\t    }\n\t  }]);\n\t\n\t  return StorageHelper;\n\t}();\n\t\n\texports.default = StorageHelper;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\n\tmazon Cognito Auth SDK for JavaScript\r\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\tr\n\ticensed under the Apache License, Version 2.0 (the \"License\").\r\n\tou may not use this file except in compliance with the License.\r\n\tcopy of the License is located at\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       *\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       *         http://aws.amazon.com/apache2.0/\r\n\tr\n\tor in the \"license\" file accompanying this file.\r\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\teither express or implied. See the\r\n\ticense for the specific language governing permissions\r\n\tand limitations under the License.\r\n\tn\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tvar _CognitoTokenScopes2 = _interopRequireDefault(_CognitoTokenScopes);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tvar _CognitoAuthSession = __webpack_require__(5);\n\t\n\tvar _CognitoAuthSession2 = _interopRequireDefault(_CognitoAuthSession);\n\t\n\tvar _StorageHelper = __webpack_require__(7);\n\t\n\tvar _StorageHelper2 = _interopRequireDefault(_StorageHelper);\n\t\n\tvar _UriHelper = __webpack_require__(11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAuth = function () {\n\t  /**\r\n\t   * Constructs a new CognitoAuth object\r\n\t   * @param {object} data Creation options\r\n\t   * @param {string} data.ClientId Required: User pool application client id.\r\n\t   * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\r\n\t   *                     this is set at the Cognito console.\r\n\t   * @param {array} data.TokenScopesArray Optional: The token scopes\r\n\t   * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\r\n\t   * which will be launched after authentication as signed in.\r\n\t   * @param {string} data.RedirectUriSignOut Required:\r\n\t   * The redirect Uri, which will be launched when signed out.\r\n\t   * @param {string} data.IdentityProvider Optional: Pre-selected identity provider (this allows to\r\n\t   * automatically trigger social provider authentication flow).\r\n\t   * @param {string} data.UserPoolId Optional: UserPoolId for the configured cognito userPool.\r\n\t   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional: boolean flag indicating if the\r\n\t   *        data collection is enabled to support cognito advanced security features. By default, this\r\n\t   *        flag is set to true.\r\n\t   * @param {object} data.Storage Optional: e.g. new CookieStorage(), to use the specified storage provided\r\n\t   * @param {function} data.LaunchUri Optional: Function to open a url, by default uses window.open in browser, Linking.openUrl in React Native\r\n\t   * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\r\n\t   */\n\t  function CognitoAuth(data) {\n\t    _classCallCheck(this, CognitoAuth);\n\t\n\t    var _ref = data || {},\n\t        ClientId = _ref.ClientId,\n\t        AppWebDomain = _ref.AppWebDomain,\n\t        TokenScopesArray = _ref.TokenScopesArray,\n\t        RedirectUriSignIn = _ref.RedirectUriSignIn,\n\t        RedirectUriSignOut = _ref.RedirectUriSignOut,\n\t        IdentityProvider = _ref.IdentityProvider,\n\t        UserPoolId = _ref.UserPoolId,\n\t        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag,\n\t        Storage = _ref.Storage,\n\t        LaunchUri = _ref.LaunchUri;\n\t\n\t    if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\n\t      throw new Error(this.getCognitoConstants().PARAMETERERROR);\n\t    }\n\t\n\t    this.clientId = ClientId;\n\t    this.appWebDomain = AppWebDomain;\n\t    this.TokenScopesArray = TokenScopesArray || [];\n\t    if (!Array.isArray(TokenScopesArray)) {\n\t      throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\n\t    }\n\t    var tokenScopes = new _CognitoTokenScopes2.default(this.TokenScopesArray);\n\t    this.RedirectUriSignIn = RedirectUriSignIn;\n\t    this.RedirectUriSignOut = RedirectUriSignOut;\n\t    this.IdentityProvider = IdentityProvider;\n\t    this.responseType = this.getCognitoConstants().TOKEN;\n\t    this.storage = Storage || new _StorageHelper2.default().getStorage();\n\t    this.username = this.getLastUser();\n\t    this.userPoolId = UserPoolId;\n\t    this.signInUserSession = this.getCachedSession();\n\t    this.signInUserSession.setTokenScopes(tokenScopes);\n\t    this.launchUri = typeof LaunchUri === 'function' ? LaunchUri : _UriHelper.launchUri;\n\t\n\t    /**\r\n\t     * By default, AdvancedSecurityDataCollectionFlag is set to true, if no input value is provided.\r\n\t     */\n\t    this.advancedSecurityDataCollectionFlag = true;\n\t    if (AdvancedSecurityDataCollectionFlag) {\n\t      this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag;\n\t    }\n\t  }\n\t\n\t  /**\r\n\t   * @returns {JSON} the constants\r\n\t   */\n\t\n\t\n\t  _createClass(CognitoAuth, [{\n\t    key: 'getCognitoConstants',\n\t    value: function getCognitoConstants() {\n\t      var CognitoConstants = {\n\t        DOMAIN_SCHEME: 'https',\n\t        DOMAIN_PATH_SIGNIN: 'oauth2/authorize',\n\t        DOMAIN_PATH_TOKEN: 'oauth2/token',\n\t        DOMAIN_PATH_SIGNOUT: 'logout',\n\t        DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\n\t        DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\n\t        DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\n\t        DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER: 'identity_provider',\n\t        DOMAIN_QUERY_PARAM_USERCONTEXTDATA: 'userContextData',\n\t        CLIENT_ID: 'client_id',\n\t        STATE: 'state',\n\t        SCOPE: 'scope',\n\t        TOKEN: 'token',\n\t        CODE: 'code',\n\t        POST: 'POST',\n\t        PARAMETERERROR: 'The parameters: App client Id, App web domain' + ', the redirect URL when you are signed in and the ' + 'redirect URL when you are signed out are required.',\n\t        SCOPETYPEERROR: 'Scopes have to be array type. ',\n\t        QUESTIONMARK: '?',\n\t        POUNDSIGN: '#',\n\t        COLONDOUBLESLASH: '://',\n\t        SLASH: '/',\n\t        AMPERSAND: '&',\n\t        EQUALSIGN: '=',\n\t        SPACE: ' ',\n\t        CONTENTTYPE: 'Content-Type',\n\t        CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\n\t        AUTHORIZATIONCODE: 'authorization_code',\n\t        IDTOKEN: 'id_token',\n\t        ACCESSTOKEN: 'access_token',\n\t        REFRESHTOKEN: 'refresh_token',\n\t        ERROR: 'error',\n\t        ERROR_DESCRIPTION: 'error_description',\n\t        STRINGTYPE: 'string',\n\t        STATELENGTH: 32,\n\t        STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\t        WITHCREDENTIALS: 'withCredentials',\n\t        UNDEFINED: 'undefined',\n\t        HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\n\t        QUERYPARAMETERREGEX1: /#(.+)/,\n\t        QUERYPARAMETERREGEX2: /=(.+)/,\n\t        HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' }\n\t      };\n\t      return CognitoConstants;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {string} the client id\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getClientId',\n\t    value: function getClientId() {\n\t      return this.clientId;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {string} the app web domain\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getAppWebDomain',\n\t    value: function getAppWebDomain() {\n\t      return this.appWebDomain;\n\t    }\n\t\n\t    /**\r\n\t     * method for getting the current user of the application from the local storage\r\n\t     *\r\n\t     * @returns {CognitoAuth} the user retrieved from storage\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getCurrentUser',\n\t    value: function getCurrentUser() {\n\t      var lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n\t\n\t      var lastAuthUser = this.storage.getItem(lastUserKey);\n\t      return lastAuthUser;\n\t    }\n\t\n\t    /**\r\n\t     * @param {string} Username the user's name\r\n\t     * method for setting the current user's name\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setUser',\n\t    value: function setUser(Username) {\n\t      this.username = Username;\n\t    }\n\t\n\t    /**\r\n\t     * sets response type to 'code'\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'useCodeGrantFlow',\n\t    value: function useCodeGrantFlow() {\n\t      this.responseType = this.getCognitoConstants().CODE;\n\t    }\n\t\n\t    /**\r\n\t     * sets response type to 'token'\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'useImplicitFlow',\n\t    value: function useImplicitFlow() {\n\t      this.responseType = this.getCognitoConstants().TOKEN;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {CognitoAuthSession} the current session for this user\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getSignInUserSession',\n\t    value: function getSignInUserSession() {\n\t      return this.signInUserSession;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {string} the user's username\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\r\n\t     * @param {string} Username the user's username\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setUsername',\n\t    value: function setUsername(Username) {\n\t      this.username = Username;\n\t    }\n\t\n\t    /**\r\n\t     * @returns {string} the user's state\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t\n\t    /**\r\n\t     * @param {string} State the user's state\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setState',\n\t    value: function setState(State) {\n\t      this.state = State;\n\t    }\n\t\n\t    /**\r\n\t     * This is used to get a session, either from the session object\r\n\t     * or from the local storage, or by using a refresh token\r\n\t     * @param {string} RedirectUriSignIn Required: The redirect Uri,\r\n\t     * which will be launched after authentication.\r\n\t     * @param {array} TokenScopesArray Required: The token scopes, it is an\r\n\t     * array of strings specifying all scopes for the tokens.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getSession',\n\t    value: function getSession() {\n\t      var tokenScopesInputSet = new Set(this.TokenScopesArray);\n\t      var cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\n\t      var URL = this.getFQDNSignIn();\n\t      if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n\t        return this.userhandler.onSuccess(this.signInUserSession);\n\t      }\n\t      this.signInUserSession = this.getCachedSession();\n\t      // compare scopes\n\t      if (!this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\n\t        var tokenScopes = new _CognitoTokenScopes2.default(this.TokenScopesArray);\n\t        var idToken = new _CognitoIdToken2.default();\n\t        var accessToken = new _CognitoAccessToken2.default();\n\t        var refreshToken = new _CognitoRefreshToken2.default();\n\t        this.signInUserSession.setTokenScopes(tokenScopes);\n\t        this.signInUserSession.setIdToken(idToken);\n\t        this.signInUserSession.setAccessToken(accessToken);\n\t        this.signInUserSession.setRefreshToken(refreshToken);\n\t        this.launchUri(URL);\n\t      } else if (this.signInUserSession.isValid()) {\n\t        return this.userhandler.onSuccess(this.signInUserSession);\n\t      } else if (!this.signInUserSession.getRefreshToken() || !this.signInUserSession.getRefreshToken().getToken()) {\n\t        this.launchUri(URL);\n\t      } else {\n\t        this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\r\n\t     * @param {string} httpRequestResponse the http request response\r\n\t     * @returns {void}\r\n\t     * Parse the http request response and proceed according to different response types.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'parseCognitoWebResponse',\n\t    value: function parseCognitoWebResponse(httpRequestResponse, isHashBasedUrl) {\n\t      var map = void 0;\n\t      if (isHashBasedUrl || httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1) {\n\t        // for code type\n\t        // this is to avoid a bug exists when sign in with Google or facebook\n\t        // Sometimes the code will contain a poundsign in the end which breaks the parsing\n\t        var response = httpRequestResponse.split(this.getCognitoConstants().POUNDSIGN)[0];\n\t        map = this.getQueryParameters(response, this.getCognitoConstants().QUESTIONMARK);\n\t        if (map.has(this.getCognitoConstants().ERROR)) {\n\t          return this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION));\n\t        }\n\t        this.getCodeQueryParameter(map);\n\t      } else if (httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1) {\n\t        // for token type\n\t        map = this.getQueryParameters(httpRequestResponse, this.getCognitoConstants().QUERYPARAMETERREGEX1);\n\t        if (map.has(this.getCognitoConstants().ERROR)) {\n\t          return this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION));\n\t        }\n\t        // To use the map to get tokens\n\t        this.getTokenQueryParameter(map);\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * @param {map} Query parameter map \r\n\t     * @returns {void}\r\n\t     * Get the query parameter map and proceed according to code response type.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getCodeQueryParameter',\n\t    value: function getCodeQueryParameter(map) {\n\t      var state = null;\n\t      if (map.has(this.getCognitoConstants().STATE)) {\n\t        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n\t      } else {\n\t        this.signInUserSession.setState(state);\n\t      }\n\t\n\t      if (map.has(this.getCognitoConstants().CODE)) {\n\t        // if the response contains code\n\t        // To parse the response and get the code value.\n\t        var codeParameter = map.get(this.getCognitoConstants().CODE);\n\t        var url = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n\t        var header = this.getCognitoConstants().HEADER;\n\t        var body = { grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\n\t          client_id: this.getClientId(),\n\t          redirect_uri: this.RedirectUriSignIn,\n\t          code: codeParameter };\n\t        var boundOnSuccess = this.onSuccessExchangeForToken.bind(this);\n\t        var boundOnFailure = this.onFailure.bind(this);\n\t        this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * Get the query parameter map and proceed according to token response type.\r\n\t     * @param {map} Query parameter map \r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getTokenQueryParameter',\n\t    value: function getTokenQueryParameter(map) {\n\t      var idToken = new _CognitoIdToken2.default();\n\t      var accessToken = new _CognitoAccessToken2.default();\n\t      var refreshToken = new _CognitoRefreshToken2.default();\n\t      var state = null;\n\t      if (map.has(this.getCognitoConstants().IDTOKEN)) {\n\t        idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\n\t        this.signInUserSession.setIdToken(idToken);\n\t      } else {\n\t        this.signInUserSession.setIdToken(idToken);\n\t      }\n\t      if (map.has(this.getCognitoConstants().ACCESSTOKEN)) {\n\t        accessToken.setJwtToken(map.get(this.getCognitoConstants().ACCESSTOKEN));\n\t        this.signInUserSession.setAccessToken(accessToken);\n\t      } else {\n\t        this.signInUserSession.setAccessToken(accessToken);\n\t      }\n\t      if (map.has(this.getCognitoConstants().STATE)) {\n\t        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n\t      } else {\n\t        this.signInUserSession.setState(state);\n\t      }\n\t      this.cacheTokensScopes();\n\t      this.userhandler.onSuccess(this.signInUserSession);\n\t    }\n\t\n\t    /**\r\n\t     * Get cached tokens and scopes and return a new session using all the cached data.\r\n\t     * @returns {CognitoAuthSession} the auth session\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getCachedSession',\n\t    value: function getCachedSession() {\n\t      if (!this.username) {\n\t        return new _CognitoAuthSession2.default();\n\t      }\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId() + '.' + this.username;\n\t      var idTokenKey = keyPrefix + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.refreshToken';\n\t      var scopeKey = keyPrefix + '.tokenScopesString';\n\t\n\t      var scopesString = this.storage.getItem(scopeKey);\n\t      var scopesArray = [];\n\t      if (scopesString) {\n\t        scopesArray = scopesString.split(' ');\n\t      }\n\t      var tokenScopes = new _CognitoTokenScopes2.default(scopesArray);\n\t      var idToken = new _CognitoIdToken2.default(this.storage.getItem(idTokenKey));\n\t      var accessToken = new _CognitoAccessToken2.default(this.storage.getItem(accessTokenKey));\n\t      var refreshToken = new _CognitoRefreshToken2.default(this.storage.getItem(refreshTokenKey));\n\t\n\t      var sessionData = {\n\t        IdToken: idToken,\n\t        AccessToken: accessToken,\n\t        RefreshToken: refreshToken,\n\t        TokenScopes: tokenScopes\n\t      };\n\t      var cachedSession = new _CognitoAuthSession2.default(sessionData);\n\t      return cachedSession;\n\t    }\n\t\n\t    /**\r\n\t     * This is used to get last signed in user from local storage\r\n\t     * @returns {string} the last user name\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getLastUser',\n\t    value: function getLastUser() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var lastUserName = this.storage.getItem(lastUserKey);\n\t      if (lastUserName) {\n\t        return lastUserName;\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\r\n\t     * This is used to save the session tokens and scopes to local storage\r\n\t     * Input parameter is a set of strings.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'cacheTokensScopes',\n\t    value: function cacheTokensScopes() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var tokenUserName = this.signInUserSession.getAccessToken().getUsername();\n\t      this.username = tokenUserName;\n\t      var idTokenKey = keyPrefix + '.' + tokenUserName + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + tokenUserName + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + tokenUserName + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var scopeKey = keyPrefix + '.' + tokenUserName + '.tokenScopesString';\n\t      var scopesArray = this.signInUserSession.getTokenScopes().getScopes();\n\t      var scopesString = scopesArray.join(' ');\n\t      this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n\t      this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n\t      this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n\t      this.storage.setItem(lastUserKey, tokenUserName);\n\t      this.storage.setItem(scopeKey, scopesString);\n\t    }\n\t\n\t    /**\r\n\t     * Compare two sets if they are identical.\r\n\t     * @param {set} set1 one set\r\n\t     * @param {set} set2 the other set\r\n\t     * @returns {boolean} boolean value is true if two sets are identical\r\n\t     */\n\t\n\t  }, {\n\t    key: 'compareSets',\n\t    value: function compareSets(set1, set2) {\n\t      if (set1.size !== set2.size) {\n\t        return false;\n\t      }\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = set1[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var item = _step.value;\n\t\n\t          if (!set2.has(item)) {\n\t            return false;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\r\n\t     * @param {string} url the url string\r\n\t     * Get the hostname from url.\r\n\t     * @returns {string} hostname string\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getHostName',\n\t    value: function getHostName(url) {\n\t      var match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\n\t      if (match != null && match.length > 2 && _typeof(match[2]) === this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\n\t        return match[2];\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\r\n\t     * Get http query parameters and return them as a map.\r\n\t     * @param {string} url the url string\r\n\t     * @param {string} splitMark query parameters split mark (prefix)\r\n\t     * @returns {map} map\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getQueryParameters',\n\t    value: function getQueryParameters(url, splitMark) {\n\t      var str = String(url).split(splitMark);\n\t      var url2 = str[1];\n\t      var str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\n\t      var num = str1.length;\n\t      var map = new Map();\n\t      var i = void 0;\n\t      for (i = 0; i < num; i++) {\n\t        str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\n\t        map.set(str1[i][0], str1[i][1]);\n\t      }\n\t      return map;\n\t    }\n\t  }, {\n\t    key: '_bufferToString',\n\t    value: function _bufferToString(buffer, chars) {\n\t      var state = [];\n\t      for (var i = 0; i < buffer.byteLength; i += 1) {\n\t        var index = buffer[i] % chars.length;\n\t        state.push(chars[index]);\n\t      }\n\t      return state.join(\"\");\n\t    }\n\t\n\t    /**\r\n\t     * helper function to generate a random string\r\n\t     * @param {int} length the length of string\r\n\t     * @param {string} chars a original string\r\n\t     * @returns {string} a random value.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'generateRandomString',\n\t    value: function generateRandomString(length, chars) {\n\t      var buffer = new Uint8Array(length);\n\t\n\t      if (typeof window !== \"undefined\" && !!window.crypto) {\n\t        window.crypto.getRandomValues(buffer);\n\t      } else {\n\t        for (var i = 0; i < length; i += 1) {\n\t          buffer[i] = Math.random() * chars.length | 0;\n\t        }\n\t      }\n\t      return this._bufferToString(buffer, chars);\n\t    }\n\t\n\t    /**\r\n\t     * This is used to clear the session tokens and scopes from local storage\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedTokensScopes',\n\t    value: function clearCachedTokensScopes() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var scopeKey = keyPrefix + '.' + this.username + '.tokenScopesString';\n\t\n\t      this.storage.removeItem(idTokenKey);\n\t      this.storage.removeItem(accessTokenKey);\n\t      this.storage.removeItem(refreshTokenKey);\n\t      this.storage.removeItem(lastUserKey);\n\t      this.storage.removeItem(scopeKey);\n\t    }\n\t\n\t    /**\r\n\t     * This is used to build a user session from tokens retrieved in the authentication result\r\n\t     * @param {object} refreshToken authResult Successful auth response from server.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'refreshSession',\n\t    value: function refreshSession(refreshToken) {\n\t      // https POST call for refreshing token\n\t      var url = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n\t      var header = this.getCognitoConstants().HEADER;\n\t      var body = { grant_type: this.getCognitoConstants().REFRESHTOKEN,\n\t        client_id: this.getClientId(),\n\t        redirect_uri: this.RedirectUriSignIn,\n\t        refresh_token: refreshToken };\n\t      var boundOnSuccess = this.onSuccessRefreshToken.bind(this);\n\t      var boundOnFailure = this.onFailure.bind(this);\n\t      this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n\t    }\n\t\n\t    /**\r\n\t     * Make the http POST request.\r\n\t     * @param {JSON} header header JSON object\r\n\t     * @param {JSON} body body JSON object\r\n\t     * @param {string} url string\r\n\t     * @param {function} onSuccess callback\r\n\t     * @param {function} onFailure callback\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'makePOSTRequest',\n\t    value: function makePOSTRequest(header, body, url, onSuccess, onFailure) {\n\t      // This is a sample server that supports CORS.\n\t      var xhr = this.createCORSRequest(this.getCognitoConstants().POST, url);\n\t      var bodyString = '';\n\t      if (!xhr) {\n\t        return;\n\t      }\n\t      // set header\n\t      for (var key in header) {\n\t        xhr.setRequestHeader(key, header[key]);\n\t      }\n\t      for (var _key in body) {\n\t        bodyString = bodyString.concat(_key, this.getCognitoConstants().EQUALSIGN, body[_key], this.getCognitoConstants().AMPERSAND);\n\t      }\n\t      bodyString = bodyString.substring(0, bodyString.length - 1);\n\t      xhr.send(bodyString);\n\t      xhr.onreadystatechange = function addressState() {\n\t        if (xhr.readyState === 4) {\n\t          if (xhr.status === 200) {\n\t            onSuccess(xhr.responseText);\n\t          } else {\n\t            onFailure(xhr.responseText);\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\r\n\t     * Create the XHR object\r\n\t     * @param {string} method which method to call\r\n\t     * @param {string} url the url string\r\n\t     * @returns {object} xhr\r\n\t     */\n\t\n\t  }, {\n\t    key: 'createCORSRequest',\n\t    value: function createCORSRequest(method, url) {\n\t      var xhr = new XMLHttpRequest();\n\t      if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\n\t        // XHR for Chrome/Firefox/Opera/Safari.\n\t        xhr.open(method, url, true);\n\t      } else if ((typeof XDomainRequest === 'undefined' ? 'undefined' : _typeof(XDomainRequest)) !== this.getCognitoConstants().UNDEFINED) {\n\t        // XDomainRequest for IE.\n\t        xhr = new XDomainRequest();\n\t        xhr.open(method, url);\n\t      } else {\n\t        // CORS not supported.\n\t        xhr = null;\n\t      }\n\t      return xhr;\n\t    }\n\t\n\t    /**\r\n\t     * The http POST request onFailure callback.\r\n\t     * @param {object} err the error object\r\n\t     * @returns {function} onFailure\r\n\t     */\n\t\n\t  }, {\n\t    key: 'onFailure',\n\t    value: function onFailure(err) {\n\t      this.userhandler.onFailure(err);\n\t    }\n\t\n\t    /**\r\n\t     * The http POST request onSuccess callback when refreshing tokens.\r\n\t     * @param {JSON} jsonData tokens\r\n\t     */\n\t\n\t  }, {\n\t    key: 'onSuccessRefreshToken',\n\t    value: function onSuccessRefreshToken(jsonData) {\n\t      var jsonDataObject = JSON.parse(jsonData);\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ERROR)) {\n\t        var URL = this.getFQDNSignIn();\n\t        this.launchUri(URL);\n\t      } else {\n\t        if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().IDTOKEN)) {\n\t          this.signInUserSession.setIdToken(new _CognitoIdToken2.default(jsonDataObject.id_token));\n\t        }\n\t        if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ACCESSTOKEN)) {\n\t          this.signInUserSession.setAccessToken(new _CognitoAccessToken2.default(jsonDataObject.access_token));\n\t        }\n\t        this.cacheTokensScopes();\n\t        this.userhandler.onSuccess(this.signInUserSession);\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * The http POST request onSuccess callback when exchanging code for tokens.\r\n\t     * @param {JSON} jsonData tokens\r\n\t     */\n\t\n\t  }, {\n\t    key: 'onSuccessExchangeForToken',\n\t    value: function onSuccessExchangeForToken(jsonData) {\n\t      var jsonDataObject = JSON.parse(jsonData);\n\t      var refreshToken = new _CognitoRefreshToken2.default();\n\t      var accessToken = new _CognitoAccessToken2.default();\n\t      var idToken = new _CognitoIdToken2.default();\n\t      var state = null;\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ERROR)) {\n\t        return this.userhandler.onFailure(jsonData);\n\t      }\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().IDTOKEN)) {\n\t        this.signInUserSession.setIdToken(new _CognitoIdToken2.default(jsonDataObject.id_token));\n\t      } else {\n\t        this.signInUserSession.setIdToken(idToken);\n\t      }\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ACCESSTOKEN)) {\n\t        this.signInUserSession.setAccessToken(new _CognitoAccessToken2.default(jsonDataObject.access_token));\n\t      } else {\n\t        this.signInUserSession.setAccessToken(accessToken);\n\t      }\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().REFRESHTOKEN)) {\n\t        this.signInUserSession.setRefreshToken(new _CognitoRefreshToken2.default(jsonDataObject.refresh_token));\n\t      } else {\n\t        this.signInUserSession.setRefreshToken(refreshToken);\n\t      }\n\t      this.cacheTokensScopes();\n\t      this.userhandler.onSuccess(this.signInUserSession);\n\t    }\n\t\n\t    /**\r\n\t     * Launch Cognito Auth UI page.\r\n\t     * @param {string} URL the url to launch\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'launchUri',\n\t    value: function launchUri() {}\n\t  }, {\n\t    key: 'getSpaceSeperatedScopeString',\n\t    // overwritten in constructor\n\t\n\t    /**\r\n\t     * @returns {string} scopes string\r\n\t     */\n\t    value: function getSpaceSeperatedScopeString() {\n\t      var tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\n\t      tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\n\t      return encodeURIComponent(tokenScopesString);\n\t    }\n\t\n\t    /**\r\n\t     * Create the FQDN(fully qualified domain name) for authorization endpoint.\r\n\t     * @returns {string} url\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getFQDNSignIn',\n\t    value: function getFQDNSignIn() {\n\t      if (this.state == null) {\n\t        this.state = this.generateRandomString(this.getCognitoConstants().STATELENGTH, this.getCognitoConstants().STATEORIGINSTRING);\n\t      }\n\t\n\t      var identityProviderParam = this.IdentityProvider ? this.getCognitoConstants().AMPERSAND.concat(this.getCognitoConstants().DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER, this.getCognitoConstants().EQUALSIGN, this.IdentityProvider) : '';\n\t      var tokenScopesString = this.getSpaceSeperatedScopeString();\n\t\n\t      var userContextDataParam = '';\n\t      var userContextData = this.getUserContextData();\n\t      if (userContextData) {\n\t        userContextDataParam = this.getCognitoConstants().AMPERSAND + this.getCognitoConstants().DOMAIN_QUERY_PARAM_USERCONTEXTDATA + this.getCognitoConstants().EQUALSIGN + this.getUserContextData();\n\t      }\n\t\n\t      // Build the complete web domain to launch the login screen\n\t      var uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN, this.getCognitoConstants().QUESTIONMARK, this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI, this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE, this.getCognitoConstants().EQUALSIGN, this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID, this.getCognitoConstants().EQUALSIGN, this.getClientId(), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE, this.getCognitoConstants().EQUALSIGN, this.state, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString, identityProviderParam, userContextDataParam);\n\t\n\t      return uri;\n\t    }\n\t\n\t    /**\r\n\t     * Sign out the user.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'signOut',\n\t    value: function signOut() {\n\t      var URL = this.getFQDNSignOut();\n\t      this.signInUserSession = null;\n\t      this.clearCachedTokensScopes();\n\t      this.launchUri(URL);\n\t    }\n\t\n\t    /**\r\n\t     * Create the FQDN(fully qualified domain name) for signout endpoint.\r\n\t     * @returns {string} url\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getFQDNSignOut',\n\t    value: function getFQDNSignOut() {\n\t      var uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT, this.getCognitoConstants().QUESTIONMARK, this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI, this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID, this.getCognitoConstants().EQUALSIGN, this.getClientId());\n\t      return uri;\n\t    }\n\t\n\t    /**\r\n\t     * This method returns the encoded data string used for cognito advanced security feature.\r\n\t     * This would be generated only when developer has included the JS used for collecting the\r\n\t     * data on their client. Please refer to documentation to know more about using AdvancedSecurity\r\n\t     * features\r\n\t     **/\n\t\n\t  }, {\n\t    key: 'getUserContextData',\n\t    value: function getUserContextData() {\n\t      if (typeof AmazonCognitoAdvancedSecurityData === \"undefined\") {\n\t        return;\n\t      }\n\t\n\t      var _username = \"\";\n\t      if (this.username) {\n\t        _username = this.username;\n\t      }\n\t\n\t      var _userpoolId = \"\";\n\t      if (this.userpoolId) {\n\t        _userpoolId = this.userpoolId;\n\t      }\n\t\n\t      if (this.advancedSecurityDataCollectionFlag) {\n\t        return AmazonCognitoAdvancedSecurityData.getData(_username, _userpoolId, this.clientId);\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * Helper method to let the user know if he has either a valid cached session \r\n\t     * or a valid authenticated session from the app integration callback.\r\n\t     * @returns {boolean} userSignedIn \r\n\t     */\n\t\n\t  }, {\n\t    key: 'isUserSignedIn',\n\t    value: function isUserSignedIn() {\n\t      return this.signInUserSession != null && this.signInUserSession.isValid() || this.getCachedSession() != null && this.getCachedSession().isValid();\n\t    }\n\t  }]);\n\t\n\t  return CognitoAuth;\n\t}();\n\t\n\texports.default = CognitoAuth;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _jsCookie = __webpack_require__(13);\n\t\n\tvar Cookies = _interopRequireWildcard(_jsCookie);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CookieStorage = function () {\n\t\n\t  /**\r\n\t   * Constructs a new CookieStorage object\r\n\t   * @param {object} data Creation options.\r\n\t   * @param {string} data.domain Cookies domain (mandatory).\r\n\t   * @param {string} data.path Cookies path (default: '/')\r\n\t   * @param {integer} data.expires Cookie expiration (in days, default: 365)\r\n\t   * @param {boolean} data.secure Cookie secure flag (default: true)\r\n\t   */\n\t  function CookieStorage(data) {\n\t    _classCallCheck(this, CookieStorage);\n\t\n\t    this.domain = data.domain;\n\t    if (data.path) {\n\t      this.path = data.path;\n\t    } else {\n\t      this.path = '/';\n\t    }\n\t    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n\t      this.expires = data.expires;\n\t    } else {\n\t      this.expires = 365;\n\t    }\n\t    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n\t      this.secure = data.secure;\n\t    } else {\n\t      this.secure = true;\n\t    }\n\t  }\n\t\n\t  /**\r\n\t   * This is used to set a specific item in storage\r\n\t   * @param {string} key - the key for the item\r\n\t   * @param {object} value - the value\r\n\t   * @returns {string} value that was set\r\n\t   */\n\t\n\t\n\t  _createClass(CookieStorage, [{\n\t    key: 'setItem',\n\t    value: function setItem(key, value) {\n\t      Cookies.set(key, value, {\n\t        path: this.path,\n\t        expires: this.expires,\n\t        domain: this.domain,\n\t        secure: this.secure\n\t      });\n\t      return Cookies.get(key);\n\t    }\n\t\n\t    /**\r\n\t     * This is used to get a specific key from storage\r\n\t     * @param {string} key - the key for the item\r\n\t     * This is used to clear the storage\r\n\t     * @returns {string} the data item\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      return Cookies.get(key);\n\t    }\n\t\n\t    /**\r\n\t     * This is used to remove an item from storage\r\n\t     * @param {string} key - the key being set\r\n\t     * @returns {string} value - value that was deleted\r\n\t     */\n\t\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      return Cookies.remove(key, {\n\t        path: this.path,\n\t        domain: this.domain,\n\t        secure: this.secure\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * This is used to clear the storage\r\n\t     * @returns {string} nothing\r\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      var cookies = Cookies.get();\n\t      var index = void 0;\n\t      for (index = 0; index < cookies.length; ++index) {\n\t        Cookies.remove(cookies[index]);\n\t      }\n\t      return {};\n\t    }\n\t  }]);\n\t\n\t  return CookieStorage;\n\t}();\n\t\n\texports.default = CookieStorage;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\r\n\t * Amazon Cognito Auth SDK for JavaScript\r\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\t\r\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n\t * You may not use this file except in compliance with the License.\r\n\t * A copy of the License is located at\r\n\t *\r\n\t *         http://aws.amazon.com/apache2.0/\r\n\t *\r\n\t * or in the \"license\" file accompanying this file.\r\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n\t * License for the specific language governing permissions\r\n\t * and limitations under the License.\r\n\t */\n\tvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\tvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t\n\t/** @class */\n\t\n\tvar DateHelper = function () {\n\t    function DateHelper() {\n\t        _classCallCheck(this, DateHelper);\n\t    }\n\t\n\t    _createClass(DateHelper, [{\n\t        key: 'getNowString',\n\t\n\t        /**\r\n\t         * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\r\n\t         */\n\t        value: function getNowString() {\n\t            var now = new Date();\n\t\n\t            var weekDay = weekNames[now.getUTCDay()];\n\t            var month = monthNames[now.getUTCMonth()];\n\t            var day = now.getUTCDate();\n\t\n\t            var hours = now.getUTCHours();\n\t            if (hours < 10) {\n\t                hours = '0' + hours;\n\t            }\n\t\n\t            var minutes = now.getUTCMinutes();\n\t            if (minutes < 10) {\n\t                minutes = '0' + minutes;\n\t            }\n\t\n\t            var seconds = now.getUTCSeconds();\n\t            if (seconds < 10) {\n\t                seconds = '0' + seconds;\n\t            }\n\t\n\t            var year = now.getUTCFullYear();\n\t\n\t            // ddd MMM D HH:mm:ss UTC YYYY\n\t            var dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n\t\n\t            return dateNow;\n\t        }\n\t    }]);\n\t\n\t    return DateHelper;\n\t}();\n\t\n\texports.default = DateHelper;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar SELF = '_self';\n\t\n\tvar launchUri = exports.launchUri = function launchUri(url) {\n\t  return window.open(url, SELF);\n\t};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tObject.defineProperty(exports, 'CognitoAccessToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAccessToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, 'CognitoIdToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoIdToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, 'CognitoRefreshToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoRefreshToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tObject.defineProperty(exports, 'CognitoTokenScopes', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoTokenScopes).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAuth = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, 'CognitoAuth', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAuth).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAuthSession = __webpack_require__(5);\n\t\n\tObject.defineProperty(exports, 'CognitoAuthSession', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAuthSession).default;\n\t  }\n\t});\n\t\n\tvar _DateHelper = __webpack_require__(10);\n\t\n\tObject.defineProperty(exports, 'DateHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_DateHelper).default;\n\t  }\n\t});\n\t\n\tvar _StorageHelper = __webpack_require__(7);\n\t\n\tObject.defineProperty(exports, 'StorageHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_StorageHelper).default;\n\t  }\n\t});\n\t\n\tvar _CookieStorage = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, 'CookieStorage', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CookieStorage).default;\n\t  }\n\t});\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * JavaScript Cookie v2.2.0\n\t * https://github.com/js-cookie/js-cookie\n\t *\n\t * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n\t * Released under the MIT license\n\t */\n\t;(function (factory) {\n\t\tvar registeredInModuleLoader = false;\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\tregisteredInModuleLoader = true;\n\t\t}\n\t\tif (true) {\n\t\t\tmodule.exports = factory();\n\t\t\tregisteredInModuleLoader = true;\n\t\t}\n\t\tif (!registeredInModuleLoader) {\n\t\t\tvar OldCookies = window.Cookies;\n\t\t\tvar api = window.Cookies = factory();\n\t\t\tapi.noConflict = function () {\n\t\t\t\twindow.Cookies = OldCookies;\n\t\t\t\treturn api;\n\t\t\t};\n\t\t}\n\t}(function () {\n\t\tfunction extend () {\n\t\t\tvar i = 0;\n\t\t\tvar result = {};\n\t\t\tfor (; i < arguments.length; i++) {\n\t\t\t\tvar attributes = arguments[ i ];\n\t\t\t\tfor (var key in attributes) {\n\t\t\t\t\tresult[key] = attributes[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\tfunction init (converter) {\n\t\t\tfunction api (key, value, attributes) {\n\t\t\t\tvar result;\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Write\n\t\n\t\t\t\tif (arguments.length > 1) {\n\t\t\t\t\tattributes = extend({\n\t\t\t\t\t\tpath: '/'\n\t\t\t\t\t}, api.defaults, attributes);\n\t\n\t\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\n\t\t\t\t\tif (!converter.write) {\n\t\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\t\n\t\t\t\t\tvar stringifiedAttributes = '';\n\t\n\t\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t\t}\n\t\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t\t}\n\t\n\t\t\t\t// Read\n\t\n\t\t\t\tif (!key) {\n\t\t\t\t\tresult = {};\n\t\t\t\t}\n\t\n\t\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t\t// calling \"get()\"\n\t\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\t\tvar i = 0;\n\t\n\t\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\t\tvar cookie = parts.slice(1).join('=');\n\t\n\t\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\t\n\t\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (!key) {\n\t\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\n\t\t\tapi.set = api;\n\t\t\tapi.get = function (key) {\n\t\t\t\treturn api.call(api, key);\n\t\t\t};\n\t\t\tapi.getJSON = function () {\n\t\t\t\treturn api.apply({\n\t\t\t\t\tjson: true\n\t\t\t\t}, [].slice.call(arguments));\n\t\t\t};\n\t\t\tapi.defaults = {};\n\t\n\t\t\tapi.remove = function (key, attributes) {\n\t\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\t\texpires: -1\n\t\t\t\t}));\n\t\t\t};\n\t\n\t\t\tapi.withConverter = init;\n\t\n\t\t\treturn api;\n\t\t}\n\t\n\t\treturn init(function () {});\n\t}));\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// amazon-cognito-auth.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d2717f06509ed670acdd","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport * as enhancements from './src';\r\n\r\nexport * from './src';\r\n\r\n// The version of crypto-browserify included by aws-sdk only\r\n// checks for window.crypto, not window.msCrypto as used by\r\n// IE 11 – so we set it explicitly here\r\nif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\r\n  window.crypto = window.msCrypto;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./enhance.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { decode } from './DecodingHelper';\r\n\r\n/** @class */\r\nexport default class CognitoAccessToken {\r\n  /**\r\n   * Constructs a new CognitoAccessToken object\r\n   * @param {string=} AccessToken The JWT access token.\r\n   */\r\n  constructor(AccessToken) {\r\n    // Assign object\r\n    this.jwtToken = AccessToken || '';\r\n    this.payload = this.decodePayload();\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the record's token.\r\n   */\r\n  getJwtToken() {\r\n    return this.jwtToken;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for access token.\r\n   * @param {string=} accessToken The JWT access token.\r\n   * @returns {void}\r\n   */\r\n  setJwtToken(accessToken) {\r\n    this.jwtToken = accessToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {int} the token's expiration (exp member).\r\n   */\r\n  getExpiration() {\r\n    if (this.jwtToken === null) {\r\n      return undefined;\r\n    }\r\n    const jwtPayload = this.jwtToken.split('.')[1];\r\n    return JSON.parse(decode(jwtPayload)).exp;\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the username from payload.\r\n   */\r\n  getUsername() {\r\n    if (this.jwtToken === null) {\r\n      return undefined;\r\n    }\r\n    const jwtPayload = this.jwtToken.split('.')[1];\r\n    return JSON.parse(decode(jwtPayload)).username;\r\n  }\r\n\r\n  /**\r\n   * @returns {object} the token's payload.\r\n   */\r\n  decodePayload() {\r\n    const jwtPayload = this.jwtToken.split('.')[1];\r\n    try {\r\n      return JSON.parse(decode(jwtPayload));\r\n    } catch (err) {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAccessToken.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { decode } from './DecodingHelper';\r\n\r\n/** @class */\r\nexport default class CognitoIdToken {\r\n  /**\r\n   * Constructs a new CognitoIdToken object\r\n   * @param {string=} IdToken The JWT Id token\r\n   */\r\n  constructor(IdToken) {\r\n    // Assign object\r\n    this.jwtToken = IdToken || '';\r\n    this.payload = this.decodePayload();\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the record's token.\r\n   */\r\n  getJwtToken() {\r\n    return this.jwtToken;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for id token.\r\n   * @param {string=} idToken The JWT Id token\r\n   * @returns {void}\r\n   */\r\n  setJwtToken(idToken) {\r\n    this.jwtToken = idToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {int} the token's expiration (exp member).\r\n   */\r\n  getExpiration() {\r\n    if (this.jwtToken === null) {\r\n      return undefined;\r\n    }\r\n    const jwtPayload = this.jwtToken.split('.')[1];\r\n    return JSON.parse(decode(jwtPayload)).exp;\r\n  }\r\n\r\n  /**\r\n   * @returns {object} the token's payload.\r\n   */\r\n  decodePayload() {\r\n    const jwtPayload = this.jwtToken.split('.')[1];\r\n    try {\r\n      return JSON.parse(decode(jwtPayload));\r\n    } catch (err) {\r\n      return {};\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoIdToken.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\n/** @class */\r\nexport default class CognitoRefreshToken {\r\n  /**\r\n   * Constructs a new CognitoRefreshToken object\r\n   * @param {string=} RefreshToken The JWT refresh token.\r\n   */\r\n  constructor(RefreshToken) {\r\n    // Assign object\r\n    this.refreshToken = RefreshToken || '';\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the record's token.\r\n   */\r\n  getToken() {\r\n    return this.refreshToken;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for refresh token.\r\n   * @param {string=} refreshToken The JWT refresh token.\r\n   * @returns {void}\r\n   */\r\n  setToken(refreshToken) {\r\n    this.refreshToken = refreshToken;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoRefreshToken.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\n/** @class */\r\nexport default class CognitoTokenScopes {\r\n  /**\r\n   * Constructs a new CognitoTokenScopes object\r\n   * @param {array=} TokenScopesArray The token scopes\r\n   */\r\n  constructor(TokenScopesArray) {\r\n    // Assign object\r\n    this.tokenScopes = TokenScopesArray || [];\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} the token scopes.\r\n   */\r\n  getScopes() {\r\n    return this.tokenScopes;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for token scopes.\r\n   * @param {array=} tokenScopes The token scopes\r\n   * @returns {void}\r\n   */\r\n  setTokenScopes(tokenScopes) {\r\n    this.tokenScopes = tokenScopes;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoTokenScopes.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport CognitoTokenScopes from './CognitoTokenScopes';\r\nimport CognitoAccessToken from './CognitoAccessToken';\r\nimport CognitoIdToken from './CognitoIdToken';\r\nimport CognitoRefreshToken from './CognitoRefreshToken';\r\n\r\n/** @class */\r\nexport default class CognitoAuthSession {\r\n\t/**\r\n\t * Constructs a new CognitoUserSession object\r\n\t * @param {CognitoIdToken} IdToken The session's Id token.\r\n\t * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\r\n\t * @param {CognitoAccessToken} AccessToken The session's access token.\r\n\t * @param {array}  TokenScopes  The session's token scopes.\r\n   * @param {string} State The session's state. \r\n\t */\r\n  constructor({ IdToken, RefreshToken, AccessToken, TokenScopes, State } = {}) {\r\n    if (IdToken) {\r\n      this.idToken = IdToken;\r\n    } else {\r\n      this.idToken = new CognitoIdToken();\r\n    }\r\n    if (RefreshToken) {\r\n      this.refreshToken = RefreshToken;\r\n    } else {\r\n      this.refreshToken = new CognitoRefreshToken();\r\n    }\r\n    if (AccessToken) {\r\n      this.accessToken = AccessToken;\r\n    } else {\r\n      this.accessToken = new CognitoAccessToken();\r\n    }\r\n    if (TokenScopes) {\r\n      this.tokenScopes = TokenScopes;\r\n    } else {\r\n      this.tokenScopes = new CognitoTokenScopes();\r\n    }\r\n    if (State) {\r\n      this.state = State;\r\n    } else {\r\n      this.state = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoIdToken} the session's Id token\r\n   */\r\n  getIdToken() {\r\n    return this.idToken;\r\n  }\r\n\r\n  /**\r\n   * Set a new Id token\r\n   * @param {CognitoIdToken} IdToken The session's Id token.\r\n   * @returns {void}\r\n   */\r\n  setIdToken(IdToken) {\r\n    this.idToken = IdToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoRefreshToken} the session's refresh token\r\n   */\r\n  getRefreshToken() {\r\n    return this.refreshToken;\r\n  }\r\n\r\n  /**\r\n   * Set a new Refresh token\r\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\r\n   * @returns {void}\r\n   */\r\n  setRefreshToken(RefreshToken) {\r\n    this.refreshToken = RefreshToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoAccessToken} the session's access token\r\n   */\r\n  getAccessToken() {\r\n    return this.accessToken;\r\n  }\r\n\r\n  /**\r\n   * Set a new Access token\r\n   * @param {CognitoAccessToken} AccessToken The session's access token.\r\n   * @returns {void}\r\n   */\r\n  setAccessToken(AccessToken) {\r\n    this.accessToken = AccessToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoTokenScopes} the session's token scopes\r\n   */\r\n  getTokenScopes() {\r\n    return this.tokenScopes;\r\n  }\r\n\r\n  /**\r\n   * Set new token scopes\r\n   * @param {array}  tokenScopes  The session's token scopes.\r\n   * @returns {void}\r\n   */\r\n  setTokenScopes(tokenScopes) {\r\n    this.tokenScopes = tokenScopes;\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the session's state\r\n   */\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * Set new state\r\n   * @param {string}  state  The session's state.\r\n   * @returns {void}\r\n   */\r\n  setState(State) {\r\n    this.state = State;\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the session is still valid based on session expiry information found\r\n   * in Access and Id Tokens and the current time\r\n   * @returns {boolean} if the session is still valid\r\n   */\r\n  isValid() {\r\n    const now = Math.floor(new Date() / 1000);\r\n    try {\r\n      if (this.accessToken != null) {\r\n        return now < this.accessToken.getExpiration();\r\n      }\r\n      if (this.idToken != null) {\r\n        return now < this.idToken.getExpiration();\r\n      }\r\n      return false;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuthSession.js","export const decode = (str) => global.atob(str);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/DecodingHelper.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nlet dataMemory = {};\r\n\r\n/** @class */\r\nclass MemoryStorage {\r\n\r\n  /**\r\n   * This is used to set a specific item in storage\r\n   * @param {string} key - the key for the item\r\n   * @param {object} value - the value\r\n   * @returns {string} value that was set\r\n   */\r\n  static setItem(key, value) {\r\n    dataMemory[key] = value;\r\n    return dataMemory[key];\r\n  }\r\n\r\n  /**\r\n   * This is used to get a specific key from storage\r\n   * @param {string} key - the key for the item\r\n   * This is used to clear the storage\r\n   * @returns {string} the data item\r\n   */\r\n  static getItem(key) {\r\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\r\n  }\r\n\r\n  /**\r\n   * This is used to remove an item from storage\r\n   * @param {string} key - the key being set\r\n   * @returns {string} value - value that was deleted\r\n   */\r\n  static removeItem(key) {\r\n    return delete dataMemory[key];\r\n  }\r\n\r\n  /**\r\n   * This is used to clear the storage\r\n   * @returns {string} nothing\r\n   */\r\n  static clear() {\r\n    dataMemory = {};\r\n    return dataMemory;\r\n  }\r\n}\r\n\r\n/** @class */\r\nexport default class StorageHelper {\r\n\r\n  /**\r\n   * This is used to get a storage object\r\n   * @returns {object} the storage\r\n   */\r\n  constructor() {\r\n    try {\r\n      this.storageWindow = window.localStorage;\r\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\r\n      this.storageWindow.removeItem('aws.cognito.test-ls');\r\n    } catch (exception) {\r\n      this.storageWindow = MemoryStorage;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is used to return the storage\r\n   * @returns {object} the storage\r\n   */\r\n  getStorage() {\r\n    return this.storageWindow;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/StorageHelper.js","/*!\r\n  * Amazon Cognito Auth SDK for JavaScript\r\n  * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n  * You may not use this file except in compliance with the License.\r\n  * A copy of the License is located at\r\n  *\r\n  *         http://aws.amazon.com/apache2.0/\r\n  *\r\n  * or in the \"license\" file accompanying this file.\r\n  * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n  * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n  * License for the specific language governing permissions\r\n  * and limitations under the License.\r\n  */\r\n\r\n  import CognitoTokenScopes from './CognitoTokenScopes';\r\n  import CognitoAccessToken from './CognitoAccessToken';\r\n  import CognitoIdToken from './CognitoIdToken';\r\n  import CognitoRefreshToken from './CognitoRefreshToken';\r\n  import CognitoAuthSession from './CognitoAuthSession';\r\n  import StorageHelper from './StorageHelper';\r\n  import { launchUri } from './UriHelper';\r\n  \r\n  /** @class */\r\n  export default class CognitoAuth {\r\n    /**\r\n     * Constructs a new CognitoAuth object\r\n     * @param {object} data Creation options\r\n     * @param {string} data.ClientId Required: User pool application client id.\r\n     * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\r\n     *                     this is set at the Cognito console.\r\n     * @param {array} data.TokenScopesArray Optional: The token scopes\r\n     * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\r\n     * which will be launched after authentication as signed in.\r\n     * @param {string} data.RedirectUriSignOut Required:\r\n     * The redirect Uri, which will be launched when signed out.\r\n     * @param {string} data.IdentityProvider Optional: Pre-selected identity provider (this allows to\r\n     * automatically trigger social provider authentication flow).\r\n     * @param {string} data.UserPoolId Optional: UserPoolId for the configured cognito userPool.\r\n     * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional: boolean flag indicating if the\r\n     *        data collection is enabled to support cognito advanced security features. By default, this\r\n     *        flag is set to true.\r\n     * @param {object} data.Storage Optional: e.g. new CookieStorage(), to use the specified storage provided\r\n     * @param {function} data.LaunchUri Optional: Function to open a url, by default uses window.open in browser, Linking.openUrl in React Native\r\n     * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\r\n     */\r\n    constructor(data) {\r\n      const { ClientId, AppWebDomain, TokenScopesArray,\r\n      RedirectUriSignIn, RedirectUriSignOut, IdentityProvider, UserPoolId,\r\n        AdvancedSecurityDataCollectionFlag, Storage, LaunchUri } = data || { };\r\n      if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\r\n        throw new Error(this.getCognitoConstants().PARAMETERERROR);\r\n      }\r\n  \r\n      this.clientId = ClientId;\r\n      this.appWebDomain = AppWebDomain;\r\n      this.TokenScopesArray = TokenScopesArray || [];\r\n      if (!Array.isArray(TokenScopesArray)) {\r\n        throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\r\n      }\r\n      const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\r\n      this.RedirectUriSignIn = RedirectUriSignIn;\r\n      this.RedirectUriSignOut = RedirectUriSignOut;\r\n      this.IdentityProvider = IdentityProvider;\r\n      this.responseType = this.getCognitoConstants().TOKEN;\r\n      this.storage = Storage || new StorageHelper().getStorage();\r\n      this.username = this.getLastUser();\r\n      this.userPoolId = UserPoolId;\r\n      this.signInUserSession = this.getCachedSession();\r\n      this.signInUserSession.setTokenScopes(tokenScopes);\r\n      this.launchUri = typeof LaunchUri === 'function' ? LaunchUri : launchUri;\r\n\r\n      /**\r\n       * By default, AdvancedSecurityDataCollectionFlag is set to true, if no input value is provided.\r\n       */\r\n      this.advancedSecurityDataCollectionFlag = true;\r\n      if (AdvancedSecurityDataCollectionFlag) {\r\n        this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag;\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * @returns {JSON} the constants\r\n     */\r\n    getCognitoConstants() {\r\n      const CognitoConstants = {\r\n        DOMAIN_SCHEME: 'https',\r\n        DOMAIN_PATH_SIGNIN: 'oauth2/authorize',\r\n        DOMAIN_PATH_TOKEN: 'oauth2/token',\r\n        DOMAIN_PATH_SIGNOUT: 'logout',\r\n        DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\r\n        DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\r\n        DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\r\n        DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER: 'identity_provider',\r\n        DOMAIN_QUERY_PARAM_USERCONTEXTDATA: 'userContextData',\r\n        CLIENT_ID: 'client_id',\r\n        STATE: 'state',\r\n        SCOPE: 'scope',\r\n        TOKEN: 'token',\r\n        CODE: 'code',\r\n        POST: 'POST',\r\n        PARAMETERERROR: 'The parameters: App client Id, App web domain' +\r\n                        ', the redirect URL when you are signed in and the ' +\r\n                        'redirect URL when you are signed out are required.',\r\n        SCOPETYPEERROR: 'Scopes have to be array type. ',\r\n        QUESTIONMARK: '?',\r\n        POUNDSIGN: '#',\r\n        COLONDOUBLESLASH: '://',\r\n        SLASH: '/',\r\n        AMPERSAND: '&',\r\n        EQUALSIGN: '=',\r\n        SPACE: ' ',\r\n        CONTENTTYPE: 'Content-Type',\r\n        CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\r\n        AUTHORIZATIONCODE: 'authorization_code',\r\n        IDTOKEN: 'id_token',\r\n        ACCESSTOKEN: 'access_token',\r\n        REFRESHTOKEN: 'refresh_token',\r\n        ERROR: 'error',\r\n        ERROR_DESCRIPTION: 'error_description',\r\n        STRINGTYPE: 'string',\r\n        STATELENGTH: 32,\r\n        STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n        WITHCREDENTIALS: 'withCredentials',\r\n        UNDEFINED: 'undefined',\r\n        HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\r\n        QUERYPARAMETERREGEX1: /#(.+)/,\r\n        QUERYPARAMETERREGEX2: /=(.+)/,\r\n        HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      };\r\n      return CognitoConstants;\r\n    }\r\n  \r\n    /**\r\n     * @returns {string} the client id\r\n     */\r\n    getClientId() {\r\n      return this.clientId;\r\n    }\r\n  \r\n    /**\r\n     * @returns {string} the app web domain\r\n     */\r\n    getAppWebDomain() {\r\n      return this.appWebDomain;\r\n    }\r\n  \r\n    /**\r\n     * method for getting the current user of the application from the local storage\r\n     *\r\n     * @returns {CognitoAuth} the user retrieved from storage\r\n     */    \r\n     getCurrentUser() {\r\n      const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\r\n  \r\n      const lastAuthUser = this.storage.getItem(lastUserKey);\r\n      return lastAuthUser;    \r\n    }\r\n  \r\n    /**\r\n     * @param {string} Username the user's name\r\n     * method for setting the current user's name\r\n     * @returns {void}\r\n     */\r\n    setUser(Username) {\r\n      this.username = Username;\r\n    }\r\n  \r\n    /**\r\n     * sets response type to 'code'\r\n     * @returns {void}\r\n     */\r\n    useCodeGrantFlow() {\r\n      this.responseType = this.getCognitoConstants().CODE;\r\n    }\r\n  \r\n    /**\r\n     * sets response type to 'token'\r\n     * @returns {void}\r\n     */\r\n    useImplicitFlow() {\r\n      this.responseType = this.getCognitoConstants().TOKEN;\r\n    }\r\n  \r\n    /**\r\n     * @returns {CognitoAuthSession} the current session for this user\r\n     */\r\n    getSignInUserSession() {\r\n      return this.signInUserSession;\r\n    }\r\n  \r\n    /**\r\n     * @returns {string} the user's username\r\n     */\r\n    getUsername() {\r\n      return this.username;\r\n    }\r\n  \r\n    /**\r\n     * @param {string} Username the user's username\r\n     * @returns {void}\r\n     */\r\n    setUsername(Username) {\r\n      this.username = Username;\r\n    }\r\n\r\n    /**\r\n     * @returns {string} the user's state\r\n     */\r\n    getState() {\r\n      return this.state;\r\n    }\r\n\r\n    /**\r\n     * @param {string} State the user's state\r\n     * @returns {void}\r\n     */\r\n    setState(State) {\r\n      this.state = State;\r\n    }\r\n  \r\n    /**\r\n     * This is used to get a session, either from the session object\r\n     * or from the local storage, or by using a refresh token\r\n     * @param {string} RedirectUriSignIn Required: The redirect Uri,\r\n     * which will be launched after authentication.\r\n     * @param {array} TokenScopesArray Required: The token scopes, it is an\r\n     * array of strings specifying all scopes for the tokens.\r\n     * @returns {void}\r\n     */\r\n    getSession() {\r\n      const tokenScopesInputSet = new Set(this.TokenScopesArray);\r\n      const cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\r\n      const URL = this.getFQDNSignIn();\r\n      if (this.signInUserSession != null && this.signInUserSession.isValid()) {\r\n        return this.userhandler.onSuccess(this.signInUserSession);\r\n      }\r\n      this.signInUserSession = this.getCachedSession();\r\n      // compare scopes\r\n      if (!this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\r\n        const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\r\n        const idToken = new CognitoIdToken();\r\n        const accessToken = new CognitoAccessToken();\r\n        const refreshToken = new CognitoRefreshToken();\r\n        this.signInUserSession.setTokenScopes(tokenScopes);\r\n        this.signInUserSession.setIdToken(idToken);\r\n        this.signInUserSession.setAccessToken(accessToken);\r\n        this.signInUserSession.setRefreshToken(refreshToken);\r\n        this.launchUri(URL);\r\n      } else if (this.signInUserSession.isValid()) {\r\n        return this.userhandler.onSuccess(this.signInUserSession);\r\n      } else if (!this.signInUserSession.getRefreshToken()\r\n      || !this.signInUserSession.getRefreshToken().getToken()) {\r\n        this.launchUri(URL);\r\n      } else {\r\n        this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\r\n      }\r\n      return undefined;\r\n    }\r\n  \r\n    /**\r\n     * @param {string} httpRequestResponse the http request response\r\n     * @returns {void}\r\n     * Parse the http request response and proceed according to different response types.\r\n     */\r\n    parseCognitoWebResponse(httpRequestResponse, isHashBasedUrl) {\r\n      let map;\r\n      if (isHashBasedUrl || httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1) { // for code type\r\n        // this is to avoid a bug exists when sign in with Google or facebook\r\n        // Sometimes the code will contain a poundsign in the end which breaks the parsing\r\n        const response = (httpRequestResponse.split(this.getCognitoConstants().POUNDSIGN))[0];\r\n        map = this.getQueryParameters(\r\n          response,\r\n          this.getCognitoConstants().QUESTIONMARK\r\n        );\r\n        if (map.has(this.getCognitoConstants().ERROR)) {\r\n          return this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION));\r\n        }\r\n        this.getCodeQueryParameter(map);\r\n      } else if (httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1) { // for token type\r\n        map = this.getQueryParameters(\r\n          httpRequestResponse,\r\n          this.getCognitoConstants().QUERYPARAMETERREGEX1\r\n        );\r\n        if (map.has(this.getCognitoConstants().ERROR)) {\r\n          return this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION));\r\n        }\r\n        // To use the map to get tokens\r\n        this.getTokenQueryParameter(map);\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * @param {map} Query parameter map \r\n     * @returns {void}\r\n     * Get the query parameter map and proceed according to code response type.\r\n     */\r\n    getCodeQueryParameter(map) {\r\n      const state = null;\r\n      if (map.has(this.getCognitoConstants().STATE)) {\r\n        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\r\n      } else {\r\n        this.signInUserSession.setState(state);\r\n      }\r\n\r\n      if (map.has(this.getCognitoConstants().CODE)) {\r\n        // if the response contains code\r\n        // To parse the response and get the code value.\r\n        const codeParameter = map.get(this.getCognitoConstants().CODE);\r\n        const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n        this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n        this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\r\n        const header = this.getCognitoConstants().HEADER;\r\n        const body = { grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\r\n          client_id: this.getClientId(),\r\n          redirect_uri: this.RedirectUriSignIn,\r\n          code: codeParameter };\r\n        const boundOnSuccess = (this.onSuccessExchangeForToken).bind(this);\r\n        const boundOnFailure = (this.onFailure).bind(this);\r\n        this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Get the query parameter map and proceed according to token response type.\r\n     * @param {map} Query parameter map \r\n     * @returns {void}\r\n     */\r\n    getTokenQueryParameter(map) {\r\n      const idToken = new CognitoIdToken();\r\n      const accessToken = new CognitoAccessToken();\r\n      const refreshToken = new CognitoRefreshToken();\r\n      const state = null;\r\n      if (map.has(this.getCognitoConstants().IDTOKEN)) {\r\n        idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\r\n        this.signInUserSession.setIdToken(idToken);\r\n      } else {\r\n        this.signInUserSession.setIdToken(idToken);\r\n      }\r\n      if (map.has(this.getCognitoConstants().ACCESSTOKEN)) {\r\n        accessToken.setJwtToken(map.get(this.getCognitoConstants().ACCESSTOKEN));\r\n        this.signInUserSession.setAccessToken(accessToken);\r\n      } else {\r\n        this.signInUserSession.setAccessToken(accessToken);\r\n      }\r\n      if (map.has(this.getCognitoConstants().STATE)) {\r\n        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\r\n      } else {\r\n        this.signInUserSession.setState(state);\r\n      }\r\n      this.cacheTokensScopes();\r\n      this.userhandler.onSuccess(this.signInUserSession); \r\n    }\r\n  \r\n    /**\r\n     * Get cached tokens and scopes and return a new session using all the cached data.\r\n     * @returns {CognitoAuthSession} the auth session\r\n     */\r\n    getCachedSession() {\r\n      if (!this.username) {\r\n        return new CognitoAuthSession();\r\n      }\r\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}.${this.username}`;\r\n      const idTokenKey = `${keyPrefix}.idToken`;\r\n      const accessTokenKey = `${keyPrefix}.accessToken`;\r\n      const refreshTokenKey = `${keyPrefix}.refreshToken`;\r\n      const scopeKey = `${keyPrefix}.tokenScopesString`;\r\n  \r\n      const scopesString = this.storage.getItem(scopeKey);\r\n      let scopesArray = [];\r\n      if (scopesString) {\r\n        scopesArray = scopesString.split(' ');\r\n      }\r\n      const tokenScopes = new CognitoTokenScopes(scopesArray);\r\n      const idToken = new CognitoIdToken(this.storage.getItem(idTokenKey));\r\n      const accessToken = new CognitoAccessToken(this.storage.getItem(accessTokenKey));\r\n      const refreshToken = new CognitoRefreshToken(this.storage.getItem(refreshTokenKey));\r\n  \r\n      const sessionData = {\r\n        IdToken: idToken,\r\n        AccessToken: accessToken,\r\n        RefreshToken: refreshToken,\r\n        TokenScopes: tokenScopes,\r\n      };\r\n      const cachedSession = new CognitoAuthSession(sessionData);\r\n      return cachedSession;\r\n    }\r\n  \r\n    /**\r\n     * This is used to get last signed in user from local storage\r\n     * @returns {string} the last user name\r\n     */\r\n    getLastUser() {\r\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\r\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\r\n      const lastUserName = this.storage.getItem(lastUserKey);\r\n      if (lastUserName) {\r\n        return lastUserName;\r\n      }\r\n      return undefined;\r\n    }\r\n  \r\n    /**\r\n     * This is used to save the session tokens and scopes to local storage\r\n     * Input parameter is a set of strings.\r\n     * @returns {void}\r\n     */\r\n    cacheTokensScopes() {\r\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\r\n      const tokenUserName = this.signInUserSession.getAccessToken().getUsername();\r\n      this.username = tokenUserName;\r\n      const idTokenKey = `${keyPrefix}.${tokenUserName}.idToken`;\r\n      const accessTokenKey = `${keyPrefix}.${tokenUserName}.accessToken`;\r\n      const refreshTokenKey = `${keyPrefix}.${tokenUserName}.refreshToken`;\r\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\r\n      const scopeKey = `${keyPrefix}.${tokenUserName}.tokenScopesString`;\r\n      const scopesArray = this.signInUserSession.getTokenScopes().getScopes();\r\n      const scopesString = scopesArray.join(' ');\r\n      this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\r\n      this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\r\n      this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\r\n      this.storage.setItem(lastUserKey, tokenUserName);\r\n      this.storage.setItem(scopeKey, scopesString);\r\n    }\r\n  \r\n    /**\r\n     * Compare two sets if they are identical.\r\n     * @param {set} set1 one set\r\n     * @param {set} set2 the other set\r\n     * @returns {boolean} boolean value is true if two sets are identical\r\n     */\r\n    compareSets(set1, set2) {\r\n      if (set1.size !== set2.size) {\r\n        return false;\r\n      }\r\n      for (const item of set1) {\r\n        if (!set2.has(item)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  \r\n    /**\r\n     * @param {string} url the url string\r\n     * Get the hostname from url.\r\n     * @returns {string} hostname string\r\n     */\r\n    getHostName(url) {\r\n      const match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\r\n      if (match != null && match.length > 2 && typeof match[2] ===\r\n      this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\r\n        return match[2];\r\n      }\r\n      return undefined;\r\n    }\r\n  \r\n    /**\r\n     * Get http query parameters and return them as a map.\r\n     * @param {string} url the url string\r\n     * @param {string} splitMark query parameters split mark (prefix)\r\n     * @returns {map} map\r\n     */\r\n    getQueryParameters(url, splitMark) {\r\n      const str = String(url).split(splitMark);\r\n      const url2 = str[1];\r\n      const str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\r\n      const num = str1.length;\r\n      const map = new Map();\r\n      let i;\r\n      for (i = 0; i < num; i++) {\r\n        str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\r\n        map.set(str1[i][0], str1[i][1]);\r\n      }\r\n      return map;\r\n    }\r\n  \r\n    _bufferToString(buffer, chars) {\r\n      const state = [];\r\n      for (let i = 0; i < buffer.byteLength; i += 1) {\r\n        const index = buffer[i] % chars.length;\r\n        state.push(chars[index]);\r\n      }\r\n      return state.join(\"\");\r\n    }\r\n  \r\n    /**\r\n     * helper function to generate a random string\r\n     * @param {int} length the length of string\r\n     * @param {string} chars a original string\r\n     * @returns {string} a random value.\r\n     */\r\n    generateRandomString(length, chars) {\r\n      const buffer = new Uint8Array(length);\r\n  \r\n      if (typeof window !== \"undefined\" && !!window.crypto) {\r\n        window.crypto.getRandomValues(buffer);\r\n      } else {\r\n        for (let i = 0; i < length; i += 1) {\r\n          buffer[i] = (Math.random() * chars.length) | 0;\r\n        }\r\n      }\r\n      return this._bufferToString(buffer, chars);\r\n    }\r\n\r\n    /**\r\n     * This is used to clear the session tokens and scopes from local storage\r\n     * @returns {void}\r\n     */\r\n    clearCachedTokensScopes() {\r\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\r\n      const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\r\n      const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\r\n      const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\r\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\r\n      const scopeKey = `${keyPrefix}.${this.username}.tokenScopesString`;\r\n  \r\n      this.storage.removeItem(idTokenKey);\r\n      this.storage.removeItem(accessTokenKey);\r\n      this.storage.removeItem(refreshTokenKey);\r\n      this.storage.removeItem(lastUserKey);\r\n      this.storage.removeItem(scopeKey);\r\n    }\r\n  \r\n    /**\r\n     * This is used to build a user session from tokens retrieved in the authentication result\r\n     * @param {object} refreshToken authResult Successful auth response from server.\r\n     * @returns {void}\r\n     */\r\n    refreshSession(refreshToken) {\r\n      // https POST call for refreshing token\r\n      const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\r\n      const header = this.getCognitoConstants().HEADER;\r\n      const body = { grant_type: this.getCognitoConstants().REFRESHTOKEN,\r\n        client_id: this.getClientId(),\r\n        redirect_uri: this.RedirectUriSignIn,\r\n        refresh_token: refreshToken };\r\n      const boundOnSuccess = (this.onSuccessRefreshToken).bind(this);\r\n      const boundOnFailure = (this.onFailure).bind(this);\r\n      this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\r\n    }\r\n  \r\n    /**\r\n     * Make the http POST request.\r\n     * @param {JSON} header header JSON object\r\n     * @param {JSON} body body JSON object\r\n     * @param {string} url string\r\n     * @param {function} onSuccess callback\r\n     * @param {function} onFailure callback\r\n     * @returns {void}\r\n     */\r\n    makePOSTRequest(header, body, url, onSuccess, onFailure) {\r\n      // This is a sample server that supports CORS.\r\n      const xhr = this.createCORSRequest(this.getCognitoConstants().POST, url);\r\n      let bodyString = '';\r\n      if (!xhr) {\r\n        return;\r\n      }\r\n      // set header\r\n      for (let key in header) {\r\n        xhr.setRequestHeader(key, header[key]);\r\n      }\r\n      for (let key in body) {\r\n        bodyString = bodyString.concat(key, this.getCognitoConstants().EQUALSIGN,\r\n        body[key], this.getCognitoConstants().AMPERSAND);\r\n      }\r\n      bodyString = bodyString.substring(0, bodyString.length - 1);\r\n      xhr.send(bodyString);\r\n      xhr.onreadystatechange = function addressState() {\r\n        if (xhr.readyState === 4) {\r\n          if (xhr.status === 200) {\r\n            onSuccess(xhr.responseText);\r\n          } else {\r\n            onFailure(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  \r\n    /**\r\n     * Create the XHR object\r\n     * @param {string} method which method to call\r\n     * @param {string} url the url string\r\n     * @returns {object} xhr\r\n     */\r\n    createCORSRequest(method, url) {\r\n      let xhr = new XMLHttpRequest();\r\n      if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\r\n        // XHR for Chrome/Firefox/Opera/Safari.\r\n        xhr.open(method, url, true);\r\n      } else if (typeof XDomainRequest !== this.getCognitoConstants().UNDEFINED) {\r\n        // XDomainRequest for IE.\r\n        xhr = new XDomainRequest();\r\n        xhr.open(method, url);\r\n      } else {\r\n        // CORS not supported.\r\n        xhr = null;\r\n      }\r\n      return xhr;\r\n    }\r\n  \r\n    /**\r\n     * The http POST request onFailure callback.\r\n     * @param {object} err the error object\r\n     * @returns {function} onFailure\r\n     */\r\n    onFailure(err) {\r\n      this.userhandler.onFailure(err);\r\n    }\r\n  \r\n    /**\r\n     * The http POST request onSuccess callback when refreshing tokens.\r\n     * @param {JSON} jsonData tokens\r\n     */\r\n    onSuccessRefreshToken(jsonData) {\r\n      const jsonDataObject = JSON.parse(jsonData);\r\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n      this.getCognitoConstants().ERROR)) {\r\n        const URL = this.getFQDNSignIn();\r\n        this.launchUri(URL);\r\n      } else {\r\n        if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n        this.getCognitoConstants().IDTOKEN)) {\r\n          this.signInUserSession.setIdToken(new\r\n          CognitoIdToken(jsonDataObject.id_token));\r\n        }\r\n        if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n        this.getCognitoConstants().ACCESSTOKEN)) {\r\n          this.signInUserSession.setAccessToken(new\r\n          CognitoAccessToken(jsonDataObject.access_token));\r\n        }\r\n        this.cacheTokensScopes();\r\n        this.userhandler.onSuccess(this.signInUserSession);\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * The http POST request onSuccess callback when exchanging code for tokens.\r\n     * @param {JSON} jsonData tokens\r\n     */\r\n    onSuccessExchangeForToken(jsonData) {\r\n      const jsonDataObject = JSON.parse(jsonData);\r\n      const refreshToken = new CognitoRefreshToken();\r\n      const accessToken = new CognitoAccessToken();\r\n      const idToken = new CognitoIdToken();\r\n      const state = null;\r\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n      this.getCognitoConstants().ERROR)) {\r\n        return this.userhandler.onFailure(jsonData);\r\n      }\r\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n      this.getCognitoConstants().IDTOKEN)) {\r\n        this.signInUserSession.setIdToken(\r\n        new CognitoIdToken(jsonDataObject.id_token));\r\n      } else {\r\n        this.signInUserSession.setIdToken(idToken);\r\n      }\r\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n      this.getCognitoConstants().ACCESSTOKEN)) {\r\n        this.signInUserSession.setAccessToken(new\r\n        CognitoAccessToken(jsonDataObject.access_token));\r\n      } else {\r\n        this.signInUserSession.setAccessToken(accessToken);\r\n      }\r\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n      this.getCognitoConstants().REFRESHTOKEN)) {\r\n        this.signInUserSession.setRefreshToken(new\r\n        CognitoRefreshToken(jsonDataObject.refresh_token));\r\n      } else {\r\n        this.signInUserSession.setRefreshToken(refreshToken);\r\n      }\r\n      this.cacheTokensScopes();\r\n      this.userhandler.onSuccess(this.signInUserSession);\r\n    }\r\n  \r\n    /**\r\n     * Launch Cognito Auth UI page.\r\n     * @param {string} URL the url to launch\r\n     * @returns {void}\r\n     */\r\n    launchUri() { }; // overwritten in constructor\r\n  \r\n    /**\r\n     * @returns {string} scopes string\r\n     */\r\n    getSpaceSeperatedScopeString() {\r\n      let tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\r\n      tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\r\n      return encodeURIComponent(tokenScopesString);\r\n    }\r\n  \r\n    /**\r\n     * Create the FQDN(fully qualified domain name) for authorization endpoint.\r\n     * @returns {string} url\r\n     */\r\n    getFQDNSignIn() {\r\n      if (this.state == null) {\r\n        this.state = this.generateRandomString(this.getCognitoConstants().STATELENGTH,\r\n      this.getCognitoConstants().STATEORIGINSTRING);\r\n      }\r\n  \r\n      const identityProviderParam = this.IdentityProvider\r\n          ? this.getCognitoConstants().AMPERSAND.concat(\r\n              this.getCognitoConstants().DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER,\r\n              this.getCognitoConstants().EQUALSIGN, this.IdentityProvider)\r\n          : '';\r\n      const tokenScopesString = this.getSpaceSeperatedScopeString();\r\n  \r\n      var userContextDataParam = '';\r\n      var userContextData = this.getUserContextData();\r\n      if (userContextData) {\r\n        userContextDataParam = this.getCognitoConstants().AMPERSAND + this.getCognitoConstants().DOMAIN_QUERY_PARAM_USERCONTEXTDATA +\r\n                               this.getCognitoConstants().EQUALSIGN + this.getUserContextData();\r\n      }\r\n  \r\n      // Build the complete web domain to launch the login screen\r\n      const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN,\r\n      this.getCognitoConstants().QUESTIONMARK,\r\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI,\r\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn),\r\n      this.getCognitoConstants().AMPERSAND,\r\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE,\r\n      this.getCognitoConstants().EQUALSIGN,\r\n      this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID,\r\n      this.getCognitoConstants().EQUALSIGN, this.getClientId(),\r\n      this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE,\r\n      this.getCognitoConstants().EQUALSIGN, this.state, this.getCognitoConstants().AMPERSAND,\r\n      this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString, identityProviderParam,\r\n      userContextDataParam);\r\n  \r\n      return uri;\r\n    }\r\n  \r\n    /**\r\n     * Sign out the user.\r\n     * @returns {void}\r\n     */\r\n    signOut() {\r\n      const URL = this.getFQDNSignOut();\r\n      this.signInUserSession = null;\r\n      this.clearCachedTokensScopes();\r\n      this.launchUri(URL);\r\n    }\r\n  \r\n    /**\r\n     * Create the FQDN(fully qualified domain name) for signout endpoint.\r\n     * @returns {string} url\r\n     */\r\n    getFQDNSignOut() {\r\n      const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT,\r\n      this.getCognitoConstants().QUESTIONMARK,\r\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI,\r\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut),\r\n      this.getCognitoConstants().AMPERSAND,\r\n      this.getCognitoConstants().CLIENT_ID,\r\n      this.getCognitoConstants().EQUALSIGN, this.getClientId());\r\n      return uri;\r\n    }\r\n  \r\n    /**\r\n     * This method returns the encoded data string used for cognito advanced security feature.\r\n     * This would be generated only when developer has included the JS used for collecting the\r\n     * data on their client. Please refer to documentation to know more about using AdvancedSecurity\r\n     * features\r\n     **/\r\n    getUserContextData() {\r\n      if (typeof AmazonCognitoAdvancedSecurityData === \"undefined\") {\r\n        return;\r\n      }\r\n  \r\n      var _username = \"\";\r\n      if (this.username){\r\n        _username = this.username;\r\n      }\r\n  \r\n      var _userpoolId = \"\";\r\n      if (this.userpoolId){\r\n        _userpoolId = this.userpoolId;\r\n      }\r\n  \r\n      if (this.advancedSecurityDataCollectionFlag) {\r\n        return AmazonCognitoAdvancedSecurityData.getData(_username, _userpoolId, this.clientId);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Helper method to let the user know if he has either a valid cached session \r\n     * or a valid authenticated session from the app integration callback.\r\n     * @returns {boolean} userSignedIn \r\n     */\r\n    isUserSignedIn() {\r\n     return (this.signInUserSession != null && this.signInUserSession.isValid()) || \r\n     (this.getCachedSession() != null && this.getCachedSession().isValid());\r\n    }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuth.js","\r\nimport * as Cookies from 'js-cookie';\r\n\r\n/** @class */\r\nexport default class CookieStorage {\r\n\r\n  /**\r\n   * Constructs a new CookieStorage object\r\n   * @param {object} data Creation options.\r\n   * @param {string} data.domain Cookies domain (mandatory).\r\n   * @param {string} data.path Cookies path (default: '/')\r\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\r\n   * @param {boolean} data.secure Cookie secure flag (default: true)\r\n   */\r\n  constructor(data) {\r\n    this.domain = data.domain;\r\n    if (data.path) {\r\n      this.path = data.path;\r\n    } else {\r\n      this.path = '/';\r\n    }\r\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\r\n      this.expires = data.expires;\r\n    } else {\r\n      this.expires = 365;\r\n    }\r\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\r\n      this.secure = data.secure;\r\n    } else {\r\n      this.secure = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is used to set a specific item in storage\r\n   * @param {string} key - the key for the item\r\n   * @param {object} value - the value\r\n   * @returns {string} value that was set\r\n   */\r\n  setItem(key, value) {\r\n    Cookies.set(key, value, {\r\n      path: this.path,\r\n      expires: this.expires,\r\n      domain: this.domain,\r\n      secure: this.secure,\r\n    }\r\n    );\r\n    return Cookies.get(key);\r\n  }\r\n\r\n  /**\r\n   * This is used to get a specific key from storage\r\n   * @param {string} key - the key for the item\r\n   * This is used to clear the storage\r\n   * @returns {string} the data item\r\n   */\r\n  getItem(key) {\r\n    return Cookies.get(key);\r\n  }\r\n\r\n  /**\r\n   * This is used to remove an item from storage\r\n   * @param {string} key - the key being set\r\n   * @returns {string} value - value that was deleted\r\n   */\r\n  removeItem(key) {\r\n    return Cookies.remove(key, {\r\n      path: this.path,\r\n      domain: this.domain,\r\n      secure: this.secure,\r\n    }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This is used to clear the storage\r\n   * @returns {string} nothing\r\n   */\r\n  clear() {\r\n    const cookies = Cookies.get();\r\n    let index;\r\n    for (index = 0; index < cookies.length; ++index) {\r\n      Cookies.remove(cookies[index]);\r\n    }\r\n    return {};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CookieStorage.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nconst monthNames =\r\n  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nconst weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n/** @class */\r\nexport default class DateHelper {\r\n  /**\r\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\r\n   */\r\n  getNowString() {\r\n    const now = new Date();\r\n\r\n    const weekDay = weekNames[now.getUTCDay()];\r\n    const month = monthNames[now.getUTCMonth()];\r\n    const day = now.getUTCDate();\r\n\r\n    let hours = now.getUTCHours();\r\n    if (hours < 10) {\r\n      hours = `0${hours}`;\r\n    }\r\n\r\n    let minutes = now.getUTCMinutes();\r\n    if (minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    let seconds = now.getUTCSeconds();\r\n    if (seconds < 10) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    const year = now.getUTCFullYear();\r\n\r\n    // ddd MMM D HH:mm:ss UTC YYYY\r\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\r\n\r\n    return dateNow;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/DateHelper.js","const SELF = '_self';\r\n\r\nexport const launchUri = (url) => window.open(url, SELF);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/UriHelper.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nexport { default as CognitoAccessToken } from './CognitoAccessToken';\r\nexport { default as CognitoIdToken } from './CognitoIdToken';\r\nexport { default as CognitoRefreshToken } from './CognitoRefreshToken';\r\nexport { default as CognitoTokenScopes } from './CognitoTokenScopes';\r\nexport { default as CognitoAuth } from './CognitoAuth';\r\nexport { default as CognitoAuthSession } from './CognitoAuthSession';\r\nexport { default as DateHelper } from './DateHelper';\r\nexport { default as StorageHelper } from './StorageHelper';\r\nexport { default as CookieStorage } from './CookieStorage';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*!\n * JavaScript Cookie v2.2.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/js-cookie/src/js.cookie.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}